Index: app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># -*- coding:utf-8 -*-\r\nfrom flask import Flask, render_template, request\r\nimport pymysql\r\nimport pandas as pd\r\nimport json\r\nfrom utils import tool, load_data, ods_to_dwd\r\nimport os\r\nfrom algorithm import predict\r\nfrom algorithm import kindney_symptom_predict\r\nfrom algorithm import liver_symptom_predict\r\nfrom algorithm import lung_symptom_predict\r\nfrom sqlalchemy import create_engine\r\nimport pymysql\r\n\r\n# 连接数据库\r\ntry:\r\n    db = pymysql.connect(\r\n             host='58.199.160.140',\r\n             port=3306,\r\n             user='root',\r\n             passwd='000000',\r\n             db ='medical_dw',\r\n             charset='utf8'\r\n             )\r\n    engine = create_engine(\"mysql+pymysql://root:000000@58.199.160.140:3306/medical_dw?charset=utf8\")\r\nexcept:\r\n    print('数据库连接失败！')\r\n    exit(0)\r\n\r\n# 使用cursor()方法创建一个游标对象cursor，用于执行SQL语句\r\ncursor = db.cursor()\r\n\r\n# # 关闭数据库连接\r\n# db.close()\r\n\r\n\r\napp = Flask(__name__)\r\napp.secret_key = '000000'\r\n\r\n\r\n\r\n@app.route('/')\r\ndef hello_world():\r\n    return render_template('index.html')\r\n\r\n# 数据导入\r\n@app.route('/dataimport', methods=[\"GET\", \"POST\"])\r\ndef dataimport():\r\n    data_source = request.form.get('data_source')   # 数据来源\r\n    dept = request.form.get('dept')     # 科室\r\n    # 确定表名和信息表字段\r\n    patient_info_table_name = 'ods_kidney_info'\r\n    pulse_table_name = 'ods_kidney_pulse_'\r\n    col_names = ['id', 'sex', 'age', 'staging', 'serum_creatinine', 'eGFR', 'symptoms_type', 'tongue', 'pulse']\r\n    ods_to_dwd_update_func = ods_to_dwd.ods_to_dwd_kidney\r\n    if dept == 'liver':\r\n        patient_info_table_name = 'ods_liver_info'\r\n        pulse_table_name = 'ods_liver_pulse_'\r\n        col_names = ['id', 'sex', 'age', 'ALT', 'symptoms_type', 'tongue', 'pulse']\r\n        ods_to_dwd_update_func = ods_to_dwd.ods_to_dwd_liver\r\n    elif dept == 'lung':\r\n        patient_info_table_name = 'ods_lung_info'\r\n        pulse_table_name = 'ods_lung_pulse_'\r\n        col_names = ['id', 'sex', 'age', 'wm_diagnosis', 'lung_qi_deficiency', 'spleen_qi_deficiency', 'kidney_qi_deficiency',\r\n                      'FEV1', 'FVC', 'FEV1%', 'FEV1/FVC', 'PEF', 'tongueA', 'tongueB', 'tongueC', 'pulseA', 'pulseB', 'pulseC', ]\r\n        ods_to_dwd_update_func = ods_to_dwd.ods_to_dwd_lung\r\n\r\n    patient_info_path = './tmp/patientinfo'\r\n    pulse_path = './tmp/pulse'\r\n    if data_source == 'local':              # 从本地导入数据到数据仓库\r\n        patient_info_file = request.files.getlist(\"file\")[0]  # 病例信息表\r\n        patient_info_file_encoding = request.form.get('patient_info_file_encoding') # 病例信息表编码格式\r\n        pulse_files = request.files.getlist(\"fileDir\")  # 脉搏信号表,多个，数组存放\r\n        pulse_file_encoding = request.form.get('pulse_file_encoding')  # 脉搏信号表编码格式\r\n        try:\r\n            # 清空临时文件目录下的所有内容\r\n            load_data.clear_folder('./tmp/')\r\n            # 保存到临时文件\r\n            if patient_info_file is not None:\r\n                patient_info_file.save(os.path.join(patient_info_path, 'patient_info.csv'))\r\n            if pulse_files is not None:\r\n                for pulse_file in pulse_files:\r\n                    filename = pulse_file.filename\r\n                    filename = filename[filename.index('/')+1:]\r\n                    pulse_file.save(os.path.join(pulse_path, filename))\r\n        except:\r\n            print('Data uploading failed！')\r\n            return 'Data uploading failed！'\r\n\r\n        # 将数据导入数据仓库\r\n        try:\r\n            if dept == 'kidney':\r\n                load_data.load_kidney_info_to_mysql(os.path.join(patient_info_path, 'patient_info.csv'), encoding=patient_info_file_encoding)\r\n                load_data.load_kidney_pulse_to_mysql(pulse_path, encoding=pulse_file_encoding)\r\n            elif dept == 'liver':\r\n                load_data.load_liver_info_to_mysql(os.path.join(patient_info_path, 'patient_info.csv'), encoding=patient_info_file_encoding)\r\n                load_data.load_liver_pulse_to_mysql(pulse_path, encoding=pulse_file_encoding)\r\n            elif dept == 'lung':\r\n                load_data.load_lung_info_to_mysql(os.path.join(patient_info_path, 'patient_info.csv'), encoding=patient_info_file_encoding)\r\n                load_data.load_lung_pulse_to_mysql(pulse_path, encoding=pulse_file_encoding)\r\n        except:\r\n            print('Data importing fialed！')\r\n            load_data.clear_folder('./tmp/')\r\n            return 'Data importing fialed！'\r\n        load_data.clear_folder('./tmp/')\r\n    elif data_source in ['MySQL', 'SqlServer']:            # 从MySQL导入数据到数据仓库\r\n        host = request.form.get('host')\r\n        port = request.form.get('port')\r\n        user = request.form.get('user')\r\n        passwd = request.form.get('passwd')\r\n        src_db = request.form.get('db')\r\n        charset = request.form.get('charset')\r\n        patient_info_table = request.form.get('patient_info_table')\r\n        pulse_table_na_rule = request.form.get('pulse_table_na_rule')\r\n        # print(host, port, user, passwd, db, charset, patient_info_table)\r\n        try:\r\n        # 连接数据库\r\n            conn = \"\"\r\n            if data_source == 'MySQL':\r\n                conn = pymysql.connect(host=host, port=int(port), user=user, passwd=passwd, db=src_db, charset=charset)\r\n            if data_source == 'SqlServer':\r\n                conn = pymssql.connect(host=host, port=int(port), user=user, password=passwd, database=src_db, charset='GBK')\r\n            src_cursor = conn.cursor()\r\n            # 读取病例信息表\r\n            sql = 'select * from ' + str(patient_info_table)\r\n            src_cursor.execute(sql)\r\n            query_result = src_cursor.fetchall()\r\n            if len(query_result) == 0:\r\n                print('Empty table!')\r\n                return 'Empty table!'\r\n            elif len(query_result[0]) != len(col_names):\r\n                print('Columns do not match!')\r\n                return 'Columns do not match!'\r\n            pd_patient_info = pd.DataFrame(list(query_result), columns=col_names)\r\n            # print(pd_patient_info)\r\n            # 导入病例信息表到数据仓库\r\n            # print(patient_info_table_name)\r\n            pd_patient_info.to_sql(name=patient_info_table_name, con=engine, if_exists='append', index=False)\r\n\r\n            # 读取并导入脉象数据\r\n            for patient_id in pd_patient_info['id']:\r\n                sql = 'select * from ' + pulse_table_name + patient_id\r\n                try:\r\n                    src_cursor.execute(sql)\r\n                except:\r\n                    print(patient_id, '脉博数据表不存在！')\r\n                    continue\r\n                query_result = src_cursor.fetchall()\r\n                pd_pulse = pd.DataFrame(list(query_result))\r\n                # print(pd_pulse)\r\n                pd_pulse.to_sql(name=pulse_table_name+patient_id.lower(), con=engine, if_exists='replace', index=False)\r\n        except:\r\n            print('Data importing failed！')\r\n            return 'Data importing failed！'\r\n\r\n    ods_to_dwd_update_func()\r\n    return 'Data importing succeed！'\r\n\r\n\r\n@app.route('/fileInput', methods=[\"GET\", \"POST\"])\r\ndef fileInpute():\r\n    return render_template('fileInput.html')\r\n\r\n# 肾科病人信息统计\r\n@app.route('/datastatistic', methods=[\"GET\", \"POST\"])\r\ndef kidney_statistic():\r\n    if request.method == \"GET\":\r\n        # 从数据库获取病人信息表\r\n        try:\r\n            cursor.execute(\"SELECT sex, age, serum_creatinine, eGFR, symptoms_type FROM dwd_kidney_info;\")\r\n        except:\r\n            print('从服务器获取数据失败')\r\n            return 0\r\n        query_result = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:,0].tolist()\r\n        pd_patient_info = pd.DataFrame(list(query_result), columns=col_names)\r\n\r\n        data = tool.get_statistic_info(pd_patient_info)\r\n\r\n        data_json = json.dumps(data)\r\n        # return data_json\r\n        return render_template('datastatistic.html', data_json=data_json)\r\n    elif request.method == \"POST\":\r\n        gender = request.form.get('gender')\r\n        min_age = request.form.get('min_age')\r\n        max_age = request.form.get('max_age')\r\n        min_sc_value = request.form.get('min_sc_value')\r\n        max_sc_value = request.form.get('max_sc_value')\r\n        min_eGFR = request.form.get('min_eGFR')\r\n        max_eGFR = request.form.get('max_eGFR')\r\n        symptoms_type = request.form.get('symptoms_type')\r\n        # print(gender, symptoms_type, min_age, max_age, min_sc_value, max_sc_value, min_eGFR, max_eGFR)\r\n\r\n        sql = \"SELECT sex, age, serum_creatinine, eGFR, symptoms_type FROM dwd_kidney_info WHERE id IS NOT NULL\"\r\n        t = [None, '', 'all']\r\n        if gender not in t:\r\n            sql = sql + \" AND sex=\" + str(gender)\r\n        if min_age not in t:\r\n            sql = sql + \" AND age>=\" + str(min_age)\r\n        if max_age not in t:\r\n            sql = sql + \" AND age<=\" + str(max_age)\r\n        if min_sc_value not in t:\r\n            sql = sql + \" AND serum_creatinine>=\" + str(min_sc_value)\r\n        if max_sc_value not in t:\r\n            sql = sql + \" AND serum_creatinine<=\" + str(max_sc_value)\r\n        if min_eGFR not in t:\r\n            sql = sql + \" AND eGFR>=\" + str(min_eGFR)\r\n        if min_sc_value not in t:\r\n            sql = sql + \" AND eGFR>=\" + str(max_eGFR)\r\n        if symptoms_type not in t:\r\n            sql = sql + \" AND symptoms_type=\" + str(symptoms_type)\r\n        # print(sql)\r\n\r\n        # 从数据库获取病人信息表\r\n        try:\r\n            cursor.execute(sql)\r\n        except:\r\n            print('从服务器获取数据失败')\r\n            return '从服务器获取数据失败'\r\n        query_result = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:, 0].tolist()\r\n        pd_patient_info = pd.DataFrame(list(query_result), columns=col_names)\r\n        # print(pd_patient_info)\r\n\r\n        data = tool.get_statistic_info(pd_patient_info)\r\n\r\n        data_json = json.dumps(data)\r\n        return data_json\r\n\r\n\r\n@app.route('/statistic_kidney',methods=['GET', 'POST'])\r\ndef statistic_detail_kidney():\r\n    return render_template('statistic_kidney.html')\r\n\r\n\r\n# 肝科病人信息统计\r\n@app.route('/liver_statistic', methods=[\"GET\", \"POST\"])\r\ndef liver_statistic():\r\n    if request.method == \"GET\":\r\n        # 从数据库获取病人信息表\r\n        try:\r\n            cursor.execute(\"SELECT sex, age, ALT, symptoms_type FROM dwd_liver_info;\")\r\n        except:\r\n            print('从服务器获取数据失败')\r\n            return '从服务器获取数据失败'\r\n        query_result = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:,0].tolist()\r\n        pd_liver_info = pd.DataFrame(list(query_result), columns=col_names)\r\n\r\n        data = tool.get_liver_statistic_info(pd_liver_info)\r\n\r\n        data_json = json.dumps(data)\r\n        return data_json\r\n    elif request.method == \"POST\":\r\n        gender = request.form.get('gender')\r\n        min_age = request.form.get('min_age')\r\n        max_age = request.form.get('max_age')\r\n        min_ALT = request.form.get('min_ALT')\r\n        max_ALT = request.form.get('max_ALT')\r\n        symptoms_type = request.form.get('symptoms_type')\r\n        print(gender, symptoms_type, min_age, max_age, min_ALT, max_ALT)\r\n\r\n        sql = \"SELECT sex, age, ALT, symptoms_type FROM dwd_liver_info WHERE id IS NOT NULL\"\r\n        t = [None, '', 'all']\r\n        gender_dict = {'1':'2', '2':'1'}\r\n        if gender not in t:\r\n            sql = sql + \" AND sex=\" + gender_dict[str(gender)]\r\n        if min_age not in t:\r\n            sql = sql + \" AND age>=\" + str(min_age)\r\n        if max_age not in t:\r\n            sql = sql + \" AND age<=\" + str(max_age)\r\n        if min_ALT not in t:\r\n            sql = sql + \" AND ALT>=\" + str(min_ALT)\r\n        if max_ALT not in t:\r\n            sql = sql + \" AND ALT<=\" + str(max_ALT)\r\n        if symptoms_type not in t:\r\n            sql = sql + \" AND symptoms_type=\" + str(symptoms_type)\r\n        # print(sql)\r\n\r\n        # 从数据库获取病人信息表\r\n        try:\r\n            cursor.execute(sql)\r\n        except:\r\n            print('从服务器获取数据失败')\r\n            return '从服务器获取数据失败'\r\n        query_result = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:, 0].tolist()\r\n        pd_liver_info = pd.DataFrame(list(query_result), columns=col_names)\r\n        # print(pd_liver_info)\r\n\r\n        data = tool.get_liver_statistic_info(pd_liver_info)\r\n        # print(data)\r\n\r\n        data_json = json.dumps(data)\r\n        return data_json\r\n\r\n@app.route('/statistic_liver',methods=['GET', 'POST'])\r\ndef statistic_detail_liver():\r\n    return render_template('statistic_liver.html')\r\n\r\n# 肺科病人信息统计\r\n@app.route('/lung_statistic', methods=[\"GET\", \"POST\"])\r\ndef lung_statistic():\r\n    if request.method == \"GET\":\r\n        # 从数据库获取病人信息表\r\n        try:\r\n            cursor.execute(\"SELECT sex, age, Lung_qi_deficiency, spleen_qi_deficiency, kidney_qi_deficiency FROM dwd_lung_info;\")\r\n        except:\r\n            print('从服务器获取数据失败')\r\n            return '从服务器获取数据失败'\r\n        query_result = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:,0].tolist()\r\n        pd_lung_info = pd.DataFrame(list(query_result), columns=col_names)\r\n        # print(pd_lung_info)\r\n\r\n        data = tool.get_lung_statistic_info(pd_lung_info)\r\n        # print(data)\r\n\r\n        data_json = json.dumps(data)\r\n        return data_json\r\n    elif request.method == \"POST\":\r\n        gender = request.form.get('gender')\r\n        min_age = request.form.get('min_age')\r\n        max_age = request.form.get('max_age')\r\n        Lung_qi_deficiency = request.form.get('Lung_qi_deficiency')\r\n        spleen_qi_deficiency = request.form.get('spleen_qi_deficiency')\r\n        kidney_qi_deficiency = request.form.get('kidney_qi_deficiency')\r\n        # print(gender, min_age, max_age, Lung_qi_deficiency, spleen_qi_deficiency, kidney_qi_deficiency)\r\n\r\n        sql = \"SELECT sex, age, Lung_qi_deficiency, spleen_qi_deficiency, kidney_qi_deficiency FROM dwd_lung_info WHERE id IS NOT NULL\"\r\n        t = [None, '', 'all']\r\n        if gender not in t:\r\n            sql = sql + \" AND sex=\" + str(gender)\r\n        if min_age not in t:\r\n            sql = sql + \" AND age>=\" + str(min_age)\r\n        if max_age not in t:\r\n            sql = sql + \" AND age<=\" + str(max_age)\r\n        if Lung_qi_deficiency not in t:\r\n            sql = sql + \" AND Lung_qi_deficiency=\" + str(Lung_qi_deficiency)\r\n        if spleen_qi_deficiency not in t:\r\n            sql = sql + \" AND spleen_qi_deficiency=\" + str(spleen_qi_deficiency)\r\n        if kidney_qi_deficiency not in t:\r\n            sql = sql + \" AND kidney_qi_deficiency=\" + str(kidney_qi_deficiency)\r\n        # print(sql)\r\n\r\n        # 从数据库获取病人信息表\r\n        try:\r\n            cursor.execute(sql)\r\n        except:\r\n            print('从服务器获取数据失败')\r\n            return '从服务器获取数据失败'\r\n        query_result = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:, 0].tolist()\r\n        pd_lung_info = pd.DataFrame(list(query_result), columns=col_names)\r\n        # print(pd_lung_info)\r\n\r\n        data = tool.get_lung_statistic_info(pd_lung_info)\r\n        # print(data)\r\n\r\n        data_json = json.dumps(data)\r\n        return data_json\r\n@app.route('/statistic_lung',methods=['GET', 'POST'])\r\ndef statistic_detail_lung():\r\n    return render_template('statistic_lung.html')\r\n\r\n# 病人信息展示页面\r\n@app.route('/patient_info_show')\r\ndef patient_info_show():\r\n    return render_template('patient_info.html',page_data=json.dumps([]))\r\n\r\n\r\n@app.route('/patient_info_by_condition',methods=['POST'])\r\ndef patient_info_by_condition():\r\n    page = request.form.get('page')  # 页数\r\n    limit = request.form.get('limit')  # 每页显示的数量\r\n    if page is None:\r\n        page=1\r\n    if limit is None:\r\n        limit=1\r\n    id = request.form.get('id')  # 编号\r\n    sex = request.form.get('sex')  # 性别\r\n    age = json.loads(request.form.get('age'))  # 年龄\r\n    serum_creatinine = json.loads(request.form.get('serum_creatinine'))  # 血肌酐\r\n    eGFR = json.loads(request.form.get('eGFR'))\r\n    symptoms = request.form.get('symptoms')  # 症型(1=肾阳虚，2=肾阴虚)\r\n    sql = \"select * from dwd_kidney_info where 1=1 \"\r\n    if id!=\"\":\r\n        sql+=\"and id='\" + str(id) + \"'\"\r\n    if sex!=\"\":\r\n        sql += \"and sex='\" + str(sex) + \"'\"\r\n    if age[0]!=\"\" :\r\n        sql += \"and age>='\" + str(age[0]) + \"'\"\r\n    if age[1]!=\"\" :\r\n        sql += \"and age<='\" +  str(age[1]) + \"'\"\r\n    if serum_creatinine[0]!=\"\":\r\n        sql += \"and serum_creatinine>='\" + str(serum_creatinine[0]) + \"'\"\r\n    if serum_creatinine[1]!=\"\":\r\n        sql += \"and serum_creatinine<='\" +  str(serum_creatinine[1]) + \"'\"\r\n    if eGFR[0]!=\"\":\r\n        sql += \"and eGFR>='\" + str(eGFR[0]) + \"'\"\r\n    if eGFR[1]!=\"\":\r\n        sql += \"and eGFR<='\" +  str(eGFR[1]) + \"'\"\r\n    if symptoms!=\"\":\r\n        sql += \"and symptoms_type='\" + str(symptoms) + \"'\"\r\n    offset = (int(page) - 1) * int(limit)  # 起始行\r\n    cursor.execute(sql)  # 获得所有符合条件的数据\r\n    totalQueryData = cursor.fetchall()\r\n    sql+=\"limit \"+str(offset)+','+str(limit)\r\n    # sql_total_count = \"select count(*) from dwd_patient_info\"  # 总的记录数\r\n    # cursor.execute(sql_total_count)  # 执行sql语句\r\n    # patient_total_count = cursor.fetchall()  # 取数据\r\n    cursor.execute(sql)\r\n    data = cursor.fetchall()\r\n    json_data = {}\r\n    result_data = []\r\n    sql_COLUMN_NAME = \"select COLUMN_NAME from INFORMATION_SCHEMA.Columns where table_name = 'dwd_kidney_info' and \" \\\r\n                      \"table_schema = 'medical_dw' ORDER BY ordinal_position\"\r\n    cursor.execute(sql_COLUMN_NAME)  \r\n    column_names = cursor.fetchall()  # 获取列名字数据\r\n    for result in data:\r\n        one_person = {}\r\n        for i in range(len(column_names)):\r\n            one_person[column_names[i][0]] = str(result[i])\r\n        result_data.append(one_person)\r\n        \r\n    json_data[\"code\"] = str(0)\r\n    json_data['total'] = len(totalQueryData)\r\n    json_data['data'] = result_data\r\n    json_data = json.dumps(json_data, ensure_ascii=False)\r\n    return json_data\r\n\r\n#脉象预测服务\r\n@app.route('/disease_prediction', methods=[\"GET\", \"POST\"])\r\ndef disease_prediction():\r\n    if request.method == \"GET\":\r\n        formData={'sex': '男', 'userage': '', 'stage': '', 'bloodCreatinine': '', 'egfr': '', 'fileName': '', 'pulseType': '', 'fileRead': 'success'}\r\n        newData = json.dumps(formData)  # json.dumps封装\r\n        return render_template('diseasePrediction.html', newData=newData)\r\n    if request.method == \"POST\":\r\n        #获取前端请求的表单数据\r\n        formData = request.form.to_dict()\r\n        # 获取pulseFile文件对象\r\n        pulseFile = request.files.get('pulseFile')\r\n        # 保存到服务器\r\n        # save方法传完整的路径和文件名\r\n        # pulseFile.save(os.path.join(UPLOAD_PATH,pulseFile.filename))\r\n        # 上行可以进行优化,下行是对pulseFile文件名进行包装，保证文件名更安全。\r\n        filename = \"pulseFile.csv\"\r\n        pulseFile.save(os.path.join(\"./files/\", filename))\r\n        #print(pulseFile)\r\n\r\n        filename_in = './files/pulseFile.csv'\r\n        # filename_out = './files/pulseFileUTF.csv'\r\n\r\n        # 输入文件的编码类型\r\n        encode_in = 'utf-16 le'\r\n        #输入表维度大小\r\n        rows=2560\r\n        cols=57\r\n        formData['fileRead'] = 'success'\r\n        try:\r\n            data = pd.read_csv(filename_in, encoding=encode_in, header=None, nrows=rows,usecols=[i for i in range(cols)])\r\n            # 调用模型计算脉搏类型预测结果\r\n            result = predict.pulsePrediction(data.values)\r\n            formData['pulseType'] = result\r\n            formData['fileName'] = ''\r\n            return json.dumps(formData)  # json.dumps封装\r\n        except UnicodeDecodeError as e:\r\n            data = pd.read_csv(filename_in, encoding='utf-8', header=None, nrows=rows,usecols=[i for i in range(cols)])\r\n            # 调用模型计算脉搏类型预测结果\r\n            result = predict.pulsePrediction(data.values)\r\n            formData['pulseType'] = result\r\n            formData['fileName'] = ''\r\n            return json.dumps(formData)  # json.dumps封装\r\n        except ValueError as e:\r\n            data = pd.read_csv(filename_in, encoding='utf-8', header=None, nrows=rows,usecols=[i for i in range(cols)])\r\n            # 调用模型计算脉搏类型预测结果\r\n            result = predict.pulsePrediction(data.values)\r\n            formData['pulseType'] = result\r\n            formData['fileName'] = ''\r\n            return json.dumps(formData)  # json.dumps封装\r\n        except Exception as e:\r\n            formData['fileRead'] = 'fail'\r\n        else:\r\n            formData['fileRead'] = 'fail'\r\n        newData = json.dumps(formData)  # json.dumps封装\r\n        return newData\r\n\r\n#脉象准确率验证服务\r\n@app.route('/pulsePrediction_accuracy', methods=[\"POST\"])\r\ndef pulsePrediction_accuracy():\r\n    # 获取前端请求的数据\r\n    selectTestNum = request.form.get('selectTestNum')\r\n    testNum=int(selectTestNum)\r\n    totalNum=857\r\n    # 调用模型验证测试结果(读取文件速度太慢，直接写死用读好的数据)\r\n    idSet,predicted,labels,correct,total,accuracy = predict.mulPulsePrediction(testNum,totalNum)\r\n    # 方案一：沉细-0 细-1 弦-2 弦细-3 滑-4 濡-5\r\n    pulseType = ['沉细', '细', '弦', '弦细', '滑', '濡']\r\n    predictType=[]\r\n    labelType=[]\r\n    for index in range(testNum):\r\n        predictType.append(pulseType[predicted[index]])\r\n        labelType.append(pulseType[labels[index]])\r\n    formData = {}\r\n    formData['testNum']=str(testNum)\r\n    formData['num_pos']=correct\r\n    formData['num_neg']=total-correct\r\n    formData['accuracy']=accuracy\r\n    formData['predictType']=predictType\r\n    formData['labelType']=labelType\r\n    formData['idSet']=idSet\r\n    newData = json.dumps(formData)  # json.dumps封装\r\n    return newData\r\n\r\n#肾象预测服务\r\n@app.route('/kindney_prediction', methods=[\"POST\"])\r\ndef kindney_prediction():\r\n    # 获取前端请求的表单数据\r\n    formData = request.form.to_dict()\r\n    # 预测函数输入指标参数格式\r\n    # dict1 = {'sex': '1', 'userage': '37', 'bloodCreatinine': '124.9', 'egfr': '73.953822', 'Tou': '舌红少苔', 'pulseType': '弦细'}\r\n    # 转换前端参数为-》预测函数参数格式\r\n    parm={}\r\n    if(formData['sex']=='男'):\r\n        parm['sex']=1\r\n    elif(formData['sex']=='女'):\r\n        parm['sex']=2\r\n    parm['userage']=formData['userage']\r\n    parm['bloodCreatinine']=formData['bloodCreatinine']\r\n    parm['egfr']=formData['egfr']\r\n    parm['Tou']=formData['tongueSymptoms']\r\n    parm['pulseType']=formData['pulseSymptoms']\r\n    try:\r\n        # 调用模型计算脉搏类型预测结果\r\n        result = kindney_symptom_predict.sigle_predict(parm)\r\n        if(result[0]==1):\r\n            formData['kindneyType']='肾阳虚'\r\n        elif(result[0]==2):\r\n            formData['kindneyType']='肾阴虚'\r\n        formData['execute'] = 'success'\r\n        return json.dumps(formData)  # json.dumps封装\r\n    except Exception as e:\r\n        formData['execute'] = 'fail'\r\n    else:\r\n        formData['execute'] = 'fail'\r\n    newData = json.dumps(formData)  # json.dumps封装\r\n    return newData\r\n\r\n#肝象预测服务\r\n@app.route('/liver_prediction', methods=[\"POST\"])\r\ndef liver_prediction():\r\n    # 获取前端请求的表单数据\r\n    formData = request.form.to_dict()\r\n    # 预测函数输入指标参数格式\r\n    # dict1 = {'sex': '2', 'userage': '65', 'ALTD': '30', 'Tou': '舌苔黄腻', 'pulseType': '弦数'}\r\n    # 转换前端参数为-》预测函数参数格式\r\n    parm={}\r\n    if(formData['sex']=='男'):\r\n        parm['sex']=2\r\n    elif(formData['sex']=='女'):\r\n        parm['sex']=1\r\n    parm['userage']=formData['userage']\r\n    parm['ALTD']=formData['alt']\r\n    parm['Tou']=formData['tongueSymptoms']\r\n    parm['pulseType']=formData['pulseSymptoms']\r\n    try:\r\n        # 调用模型计算脉搏类型预测结果\r\n        result = liver_symptom_predict.sigle_predict(parm)\r\n        if(result[0]==1):\r\n            formData['liverType']='肝胆湿热证'\r\n        elif(result[0]==2):\r\n            formData['liverType']='肝郁脾虚证'\r\n        formData['execute'] = 'success'\r\n        return json.dumps(formData)  # json.dumps封装\r\n    except Exception as e:\r\n        formData['execute'] = 'fail'\r\n    else:\r\n        formData['execute'] = 'fail'\r\n    newData = json.dumps(formData)  # json.dumps封装\r\n    return newData\r\n\r\n#肝象预测服务\r\n@app.route('/lung_prediction', methods=[\"POST\"])\r\ndef lung_prediction():\r\n    # 获取前端请求的表单数据\r\n    formData = request.form.to_dict()\r\n    # 预测函数输入指标参数格式\r\n    # dict1 = {'sex': '1', 'userage': '75', 'FEV1': '2.2','FVC':'2.71','FEV1%':'83.33','FEV1/FVC':'0.811808118','PEF':'4.02','Tou': '苔黄', 'pulseType': '脉弦滑'}\r\n    # 转换前端参数为-》预测函数参数格式\r\n    parm={}\r\n    if(formData['sex']=='男'):\r\n        parm['sex']=1\r\n    elif(formData['sex']=='女'):\r\n        parm['sex']=2\r\n    parm['userage']=formData['userage']\r\n    parm['FEV1']=formData['FEV1']\r\n    parm['FVC'] = formData['FVC']\r\n    parm['FEV1%'] = formData['FEV1%']\r\n    parm['FEV1/FVC'] = formData['FEV1/FVC']\r\n    parm['PEF'] = formData['PEF']\r\n    parm['Tou']=formData['tongueSymptoms']\r\n    parm['pulseType']=formData['pulseSymptoms']\r\n    try:\r\n        formData['lungType'] = ''\r\n        # 调用模型计算脉搏类型预测结果\r\n        result = lung_symptom_predict.sigle_predict(parm)\r\n        if(result[0]==1):\r\n            formData['lungType']='肝气虚'\r\n        if(result[1]==1 and formData['lungType']==''):\r\n            formData['lungType'] += '脾气虚'\r\n        else:\r\n            formData['lungType'] += '，脾气虚'\r\n        if (result[2] == 1 and formData['lungType']==''):\r\n            formData['lungType'] += '肾气虚'\r\n        else:\r\n            formData['lungType'] += '，肾气虚'\r\n        formData['execute'] = 'success'\r\n        return json.dumps(formData)  # json.dumps封装\r\n    except Exception as e:\r\n        formData['execute'] = 'fail'\r\n    else:\r\n        formData['execute'] = 'fail'\r\n    newData = json.dumps(formData)  # json.dumps封装\r\n    return newData\r\n    \r\n#用户通道数量      \r\n@app.route('/find_channelNumber',methods=['GET','POST'])\r\ndef find_channelNumber():\r\n    id = request.form.get('id')  # 用户id\r\n    type=request.form.get('type')\r\n    if (type=='kidney' or type=='liver'):\r\n        sql = \"select count(*) from information_schema.COLUMNS where TABLE_SCHEMA='medical_dw' and table_name='ods_\"+type+\"_pulse_\" + str(\r\n        id) + \"'\"\r\n    elif (type=='lung'):\r\n        sql = \"select count(*) from information_schema.COLUMNS where TABLE_SCHEMA='medical_dw' and table_name='ods_lung_pulse_\" + str(\r\n            id).casefold() + \"'\"\r\n    cursor.execute(sql)  # 执行sql语句\r\n    res = cursor.fetchall()  # 取数据\r\n    json_data={}\r\n    json_data['channelNumber'] = res[0][0]\r\n    print(json_data['channelNumber'])\r\n    return json.dumps(json_data)\r\n\r\n\r\n#根据id及通道编号获取用户通道数据\r\n@app.route('/channel_data',methods=['GET','POST'])\r\ndef channel_data():\r\n    id = request.form.get('id')  # 用户id\r\n    num = request.form.get('num')  # 通道编号\r\n    num=int(num)-1\r\n    type = request.form.get('type')\r\n    if (type == 'kidney' or type == 'liver'):\r\n        sql = \"select `\" + str(num) + \"` from medical_dw.ods_\"+type+\"_pulse_\" + str(id)\r\n    elif (type == 'lung'):\r\n        sql = \"select `\" + str(num) + \"` from medical_dw.ods_lung_pulse_\" + str(id).casefold()\r\n    cursor.execute(sql)  # 执行sql语句\r\n    res = cursor.fetchall()  # 取数据\r\n    json_data = {}\r\n    channel_data = []\r\n    for i in res:\r\n        channel_data.append(round(i[0],5))\r\n    json_data[\"data\"] = channel_data\r\n    return json.dumps(json_data)\r\n    \r\n    \r\n#查询肺病人的信息\r\n@app.route('/lung_patient_info',methods=['POST'])\r\ndef lung_patient_info():\r\n    page = request.form.get('page')  # 页数\r\n    limit = request.form.get('limit')  # 每页显示的数量\r\n    if page is None or page==\"\":\r\n        page=1\r\n    if limit is None or limit==\"\":\r\n        limit=10\r\n    id = request.form.get('id')  # 编号\r\n    sex = request.form.get('sex')  # 性别\r\n    age = json.loads(request.form.get('age'))  # 年龄\r\n    wm_diagnosis = request.form.get('wm_diagnosis')  # 西医诊断\r\n    fei_qi_xu = request.form.get('fei_qi_xu')  # 肺气虚\r\n    pi_qi_xu = request.form.get('pi_qi_xu')  # 脾气虚\r\n    sheng_qi_xu = request.form.get('sheng_qi_xu')  # 肾气虚\r\n    FEV1 = json.loads(request.form.get('FEV1'))  # 年龄\r\n    FVC = json.loads(request.form.get('FVC'))  # 年龄\r\n    FEV11 = json.loads(request.form.get('FEV1%'))  # 年龄\r\n    FEV2 = json.loads(request.form.get('FEV1/FVC'))  # FEV1 / FVC改值\r\n    PEF = json.loads(request.form.get('PEF'))\r\n    tongue = request.form.get('tongue')  # 舌象\r\n    pulse = request.form.get('pulse')  # 脉象\r\n    sql = \"select * from dwd_lung_info where 1=1 \"\r\n    print(sql)\r\n    if id != \"\":\r\n        sql += \"and id='\" + str(id) + \"'\"\r\n    if sex != \"\":\r\n        sql += \"and sex='\" + str(sex) + \"'\"\r\n    if age != \"\" and age[0] != \"\":\r\n        sql += \"and age>='\" + str(age[0]) + \"'\"\r\n    if age != \"\" and age[1] != \"\":\r\n        sql += \"and age<='\" + str(age[1]) + \"'\"\r\n    if wm_diagnosis != \"\":\r\n        sql += \"and wm_diagnosis like '\" + \"%\" + str(wm_diagnosis) + \"%\" + \"'\"\r\n    if fei_qi_xu != \"\":\r\n        sql += \"and Lung_qi_deficiency='\" + str(fei_qi_xu) + \"'\"\r\n    if pi_qi_xu != \"\":\r\n        sql += \"and spleen_qi_deficiency='\" + str(pi_qi_xu) + \"'\"\r\n    if sheng_qi_xu != \"\":\r\n        sql += \"and kidney_qi_deficiency='\" + str(sheng_qi_xu) + \"'\"\r\n    if FEV1 != \"\" and FEV1[0] != \"\":\r\n        sql += \"and FEV1>='\" + str(FEV1[0]) + \"'\"\r\n    if FEV1 != \"\" and FEV1[1] != \"\":\r\n        sql += \"and FEV1<='\" + str(FEV1[1]) + \"'\"\r\n    if FVC != \"\" and FVC[0] != \"\":\r\n        sql += \"and FVC>='\" + str(FVC[0]) + \"'\"\r\n    if FVC != \"\" and FVC[1] != \"\":\r\n        sql += \"and FVC<='\" + str(FVC[1]) + \"'\"\r\n    if FEV11 != \"\" and FEV11[0] != \"\":\r\n        sql += \"and \\'FEV1%\\'>='\" + str(FEV11[0]) + \"'\"\r\n    if FEV11 != \"\" and FEV11[1] != \"\":\r\n        sql += \"and \\'FEV1%\\'<='\" + str(FEV11[1]) + \"'\"\r\n    if FEV2 != \"\" and FEV2[0] != \"\":\r\n        sql += \"and \\'FEV1/FVC>=\\''\" + str(FEV2[0]) + \"'\"\r\n    if FEV2 != \"\" and FEV2[1] != \"\":\r\n        sql += \"and \\'FEV1/FVC<=\\''\" + str(FEV2[1]) + \"'\"\r\n    if PEF != \"\" and PEF[0] != \"\":\r\n        sql += \"and PEF>='\" + str(PEF[0]) + \"'\"\r\n    if PEF != \"\" and PEF[1] != \"\":\r\n        sql += \"and PEF<='\" + str(PEF[1]) + \"'\"\r\n    if tongue != \"\":\r\n        sql += \"and tongue like '\" + \"%\" + str(tongue) + \"%\" + \"'\"\r\n    if pulse != \"\":\r\n        sql += \"and pulse like '\" + \"%\" + str(pulse) + \"%\" + \"'\"\r\n    offset = (int(page) - 1) * int(limit)  # 起始行\r\n    cursor.execute(sql)\r\n    total_data = cursor.fetchall()  # 所有满足条件的数据\r\n    sql += \"limit \" + str(offset) + ',' + str(limit)\r\n    cursor.execute(sql)  # 执行sql语句\r\n    data = cursor.fetchall()  # 获取数据\r\n    json_data = {}\r\n    result_data = []\r\n\r\n    sql_COLUMN_NAME = \"select COLUMN_NAME from INFORMATION_SCHEMA.Columns where table_name = 'dwd_lung_info' and \" \\\r\n                      \"table_schema = 'medical_dw' ORDER BY ordinal_position\"\r\n    cursor.execute(sql_COLUMN_NAME)  # 执行sql语句\r\n    column_names = cursor.fetchall()  # 获取数据\r\n\r\n    for result in data:\r\n        one_person = {}\r\n        for i in range(len(column_names)):\r\n            one_person[column_names[i][0]] = str(result[i])\r\n        result_data.append(one_person)\r\n    json_data['total'] = len(total_data)\r\n    json_data['data'] = result_data\r\n    json_data = json.dumps(json_data, ensure_ascii=False)\r\n    return json_data\r\n    \r\n    \r\n@app.route('/liver_patient_info',methods=['POST'])\r\ndef liver_patient_info():\r\n    page = request.form.get('page')  # 页数\r\n    limit = request.form.get('limit')  # 每页显示的数量\r\n    if page is None or page == \"\":\r\n        page = 1\r\n    if limit is None or limit == \"\":\r\n        limit = 10\r\n    id = request.form.get('id')  # 编号\r\n    sex = request.form.get('sex')  # 性别\r\n    age = json.loads(request.form.get('age'))  # 年龄\r\n    symptoms_type = request.form.get('symptoms_type')#症型\r\n    ALT = json.loads(request.form.get('ALT'))\r\n    tongue = request.form.get('tongue')  # 舌象\r\n    pulse = request.form.get('pulse')  # 脉象\r\n    sql = \"select * from dwd_liver_info where 1=1 \"\r\n    if id != \"\":\r\n        sql += \"and id='\" + str(id) + \"'\"\r\n    if sex != \"\":\r\n        sql += \"and sex='\" + str(sex) + \"'\"\r\n    if age != \"\" and age[0] != \"\":\r\n        sql += \"and age>'\" + str(age[0]) + \"'\"\r\n    if age != \"\" and age[1] != \"\":\r\n        sql += \"and age<'\" + str(age[1]) + \"'\"\r\n    if ALT != \"\" and ALT[0] != \"\":\r\n        sql += \"and ALT>'\" + str(ALT[0]) + \"'\"\r\n    if ALT != \"\" and ALT[1] != \"\":\r\n        sql += \"and ALT<'\" + str(ALT[1]) + \"'\"\r\n    if symptoms_type != \"\":\r\n        sql += \"and symptoms_type='\" + str(symptoms_type) + \"'\"\r\n    if tongue != \"\":\r\n        sql += \"and tongue like '\" + \"%\" + str(tongue) + \"%\" + \"'\"\r\n    if pulse != \"\":\r\n        sql += \"and pulse like '\" + \"%\" + str(pulse) + \"%\" + \"'\"\r\n    offset = (int(page) - 1) * int(limit)  # 起始行\r\n    cursor.execute(sql)\r\n    total_data = cursor.fetchall()  # 所有满足条件的数据\r\n    sql += \"limit \" + str(offset) + ',' + str(limit)\r\n    cursor.execute(sql)  # 执行sql语句\r\n    data = cursor.fetchall()  # 获取数据\r\n    json_data = {}\r\n    result_data = []\r\n    sql_COLUMN_NAME = \"select COLUMN_NAME from INFORMATION_SCHEMA.Columns where table_name = 'dwd_liver_info' and \" \\\r\n                      \"table_schema = 'medical_dw' ORDER BY ordinal_position\"\r\n    cursor.execute(sql_COLUMN_NAME)  # 执行sql语句\r\n    column_names = cursor.fetchall()  # 获取数据\r\n    for result in data:\r\n        one_person = {}\r\n        for i in range(len(column_names)):\r\n            one_person[column_names[i][0]] = str(result[i])\r\n        result_data.append(one_person)\r\n    json_data['total'] = len(total_data)\r\n    json_data['data'] = result_data\r\n    json_data = json.dumps(json_data, ensure_ascii=False)\r\n    return json_data\r\n\r\n@app.route('/tongue_data',methods=['GET','POST'])\r\ndef tongue_data():\r\n\r\n    def return_img_stream(img_local_path):\r\n        \"\"\"\r\n        工具函数:\r\n        获取本地图片流\r\n        :param img_local_path:文件单张图片的本地绝对路径\r\n        :return: 图片流\r\n        \"\"\"\r\n        import base64\r\n        img_stream = ''\r\n        with open(img_local_path, 'rb') as img_f:\r\n            img_stream = img_f.read()\r\n            img_stream = base64.b64encode(img_stream).decode()\r\n        return img_stream\r\n    id=request.form.get('id')\r\n    patient= request.form.get('patient')\r\n    cur_path_raw='static/data/tongueimage/' + patient + '/' + id + '.bmp'\r\n    json_data = {}\r\n    if(os.path.exists(cur_path_raw)):\r\n        img_stream=return_img_stream(cur_path_raw)\r\n        json_data['tongue_data'] = img_stream\r\n    else:\r\n        json_data['tongue_data'] = 'None'\r\n    return json_data\r\n\r\n@app.route('/tongue_predict',methods=['GET','POST'])\r\ndef tougue_predict():\r\n    def tongue_code(tongue):\r\n        import re\r\n        # 对舌的标签描述进行编码\r\n        tongue['tongue_proper_color'] = 0  # 舌质颜色 淡红（正常）0 淡白1 红2 暗/紫3\r\n        tongue['tongue_proper_shape_pang'] = 0  # 舌质形态 正常0 胖1  裂纹齿印(太少不用)\r\n        tongue['tongue_proper_shape_neng'] = 0  # 舌质形态 正常0  嫩1\r\n        tongue['tongue_proper_shape_chi'] = 0  # 舌质形态 正常0  有齿痕或齿印 1\r\n        tongue['tongue_moss_color'] = 0  # 苔色白（正常）0 黄1\r\n        tongue['tongue_moss_nature'] = 0  # 苔质 薄（正常）0  少1  腻2\r\n        # 舌色编码\r\n        patt0 = r'.*淡(?!红).*'\r\n        tongue.loc[~tongue['tongue'].apply(lambda x: re.match(patt0, x)).isna(), 'tongue_proper_color'] = 1\r\n        patt1 = r'.*[^淡]红.*'\r\n        tongue.loc[~tongue['tongue'].apply(lambda x: re.match(patt1, x)).isna(), 'tongue_proper_color'] = 2\r\n        tongue.loc[tongue['tongue'].str.contains('暗'), 'tongue_proper_color'] = 3\r\n        tongue.loc[tongue['tongue'].str.contains('紫'), 'tongue_proper_color'] = 3\r\n        # 舌形编码\r\n        tongue.loc[tongue['tongue'].str.contains('胖'), 'tongue_proper_shape_pang'] = 1\r\n        tongue.loc[tongue['tongue'].str.contains('嫩'), 'tongue_proper_shape_neng'] = 1\r\n        tongue.loc[tongue['tongue'].str.contains('齿'), 'tongue_proper_shape_chi'] = 1\r\n        # 苔色编码\r\n        tongue.loc[tongue['tongue'].str.contains('黄'), 'tongue_moss_color'] = 1\r\n        # 苔质编码\r\n        tongue.loc[tongue['tongue'].str.contains('少'), 'tongue_moss_nature'] = 1\r\n        tongue.loc[tongue['tongue'].str.contains('腻'), 'tongue_moss_nature'] = 2\r\n        return tongue\r\n\r\n    if request.method == \"GET\":\r\n        # 从数据库获取病人信息表\r\n        try:\r\n            cursor.execute(\"SELECT id,tongue FROM ods_kidney_info;\")\r\n        except:\r\n            print('从服务器获取肾病舌形数据失败')\r\n            return 0\r\n        query_result_kidney = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:,0].tolist()\r\n        tongue_kidney= pd.DataFrame(list(query_result_kidney), columns=col_names)\r\n\r\n        try:\r\n            cursor.execute(\"SELECT id,tongue FROM ods_liver_info;\")\r\n        except:\r\n            print('从服务器获取肝病舌形数据失败')\r\n            return 0\r\n        query_result_liver = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:,0].tolist()\r\n        tongue_liver= pd.DataFrame(list(query_result_liver), columns=col_names)\r\n        try:\r\n            cursor.execute(\"SELECT id,tongueA as tongue FROM ods_lung_info;\")\r\n        except:\r\n            print('从服务器获取肺病舌形数据失败')\r\n            return 0\r\n        query_result_lung = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:,0].tolist()\r\n        tongue_lung= pd.DataFrame(list(query_result_lung), columns=col_names)\r\n        result_raw=[]\r\n        for i in range(len(tongue_kidney)):\r\n            result_raw.append([tongue_kidney.iloc[:,0][i],str(tongue_kidney.iloc[:,1][i])])\r\n        for i in range(len(tongue_liver)):\r\n            result_raw.append([tongue_liver.iloc[:,0][i],str(tongue_liver.iloc[:,1][i])])\r\n        for i in range(len(tongue_lung)):\r\n            result_raw.append([tongue_lung.iloc[:,0][i],str(tongue_lung.iloc[:,1][i])])\r\n        result_raw=pd.DataFrame(result_raw)\r\n        result_raw.columns=['id','tongue']\r\n        result=tongue_code(result_raw)\r\n        # result.to_excel('files/tongue_all_features.xls', index=False)\r\n        result.to_csv('files/tongue_all_features.csv', index=False)\r\n        print(result)\r\n        # return render_template('/tongue_predict.html')\r\n\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.py b/app.py
--- a/app.py	(revision 823e2b66f049f975566b23bd48a01d90c495a522)
+++ b/app.py	(date 1624451789430)
@@ -909,6 +909,89 @@
         # return render_template('/tongue_predict.html')
 
 
+@app.route('/tongue_pre',methods=['POST'])
+def tongue_prediction():
+    tongueImg = request.files["tongueImg"]
+    predictResult = getPre(tongueImg)
+    predictResult = json.dumps(predictResult)
+    return predictResult
+
+@app.route('/tongue_batch_pre',methods=['POST'])
+def tongue_batch_pre():
+    tongueImg = request.form.get("num")
+    "kidneyk0500.bmp"
+    a = [{
+        "encode": r"static\1.jpg",
+        "true_ton_color": "淡红",
+        "pre_ton_color": "淡红",
+        "true_coating_color": "淡黑",
+        "pre_coating_color": "淡黑"
+    },
+        {
+            "encode": r"static\1.jpg",
+            "true_ton_color": "淡红",
+            "pre_ton_color": "淡红",
+            "true_coating_color": "淡黑",
+            "pre_coating_color": "淡黑"
+        },{
+        "encode": r"static\1.jpg",
+        "true_ton_color": "淡红",
+        "pre_ton_color": "淡红",
+        "true_coating_color": "淡黑",
+        "pre_coating_color": "淡黑"
+    },{
+        "encode": r"static\1.jpg",
+        "true_ton_color": "淡红",
+        "pre_ton_color": "淡红",
+        "true_coating_color": "淡黑",
+        "pre_coating_color": "淡黑"
+    },{
+        "encode": r"static\1.jpg",
+        "true_ton_color": "淡红",
+        "pre_ton_color": "淡红",
+        "true_coating_color": "淡黑",
+        "pre_coating_color": "淡黑"
+    },{
+        "encode": r"static\1.jpg",
+        "true_ton_color": "淡红",
+        "pre_ton_color": "淡红",
+        "true_coating_color": "淡黑",
+        "pre_coating_color": "淡黑"
+    },{
+        "encode": r"static\1.jpg",
+        "true_ton_color": "淡红",
+        "pre_ton_color": "淡红",
+        "true_coating_color": "淡黑",
+        "pre_coating_color": "淡黑"
+    },{
+        "encode": r"static\1.jpg",
+        "true_ton_color": "淡红",
+        "pre_ton_color": "淡红",
+        "true_coating_color": "淡黑",
+        "pre_coating_color": "淡黑"
+    },{
+        "encode": r"static\1.jpg",
+        "true_ton_color": "淡红",
+        "pre_ton_color": "淡红",
+        "true_coating_color": "淡黑",
+        "pre_coating_color": "淡黑"
+    },{
+        "encode": r"static\1.jpg",
+        "true_ton_color": "淡红",
+        "pre_ton_color": "淡红",
+        "true_coating_color": "淡黑",
+        "pre_coating_color": "淡黑"
+    },
+    ]
+    a = json.dumps(a)
+    return a
+
+def getPre(useLess):
+    return {
+        "tongue_color": "淡红",
+        "coated_tongue_color": "淡黑"
+    }
+
 
 if __name__ == '__main__':
     app.run(debug=True)
Index: templates/diseasePrediction.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"/>\r\n    <title>病症预测页面</title>\r\n<style type=\"text/css\">\r\n.file {\r\n    display: inline-block;\r\n    height: 38px;\r\n    line-height: 38px;\r\n    padding: 0 18px;\r\n    background-color: #1E9FFF;\r\n    color: #fff;\r\n    white-space: nowrap;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    border: none;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n\r\n    /*position: relative;*/\r\n    /*overflow: hidden;*/\r\n    /*text-decoration: none;*/\r\n    /*text-indent: 0;*/\r\n}\r\n.file input {\r\n    position: absolute;\r\n    font-size: 100px;\r\n    right: 0;\r\n    top: 0;\r\n    opacity: 0;\r\n}\r\n.file:hover {\r\n    background: #78C3F3;\r\n    border-color: #78C3F3;\r\n    color: #004974;\r\n    text-decoration: none;\r\n}\r\n</style>\r\n    <link rel=\"stylesheet\" href=\"../static/layui/css/layui.css\"/>\r\n    <script src=\"../static/js/jquery.js\"></script>\r\n  </head>\r\n  <body>\r\n      <div class=\"layui-tab layui-tab-brief\" lay-filter=\"docDemoTabBrief\">\r\n        <ul class=\"layui-tab-title\">\r\n          <li class=\"layui-this\">脉象预测</li>\r\n          <li>脉象预测准确率展示</li>\r\n          <li>舌象预测</li>\r\n          <li>舌象预测准确率展示</li>\r\n          <li>肾象预测</li>\r\n          <li>肾象预测准确率展示</li>\r\n          <li>肝象预测</li>\r\n          <li>肝象预测准确率展示</li>\r\n          <li>肺象预测</li>\r\n          <li>肺象预测准确率展示</li>\r\n        </ul>\r\n        <div class=\"layui-tab-content\" style=\"height: 100px;\">\r\n          <div class=\"layui-tab-item layui-show\">\r\n            <fieldset class=\"layui-elem-field layui-field-title\" style=\"margin-top: 15px;\">\r\n              <legend>输入病人的各项指标</legend>\r\n            </fieldset>\r\n            <form name=\"myForm\" id=\"form1\" class=\"layui-form layui-form-pane\" action=\"##\" onsubmit=\"return false\" method=\"post\" lay-filter=\"forecastInformation\"\r\n                  enctype='multipart/form-data'>\r\n\r\n              <div class=\"layui-form-item\" pane=\"\">\r\n                <label class=\"layui-form-label\">性别</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"radio\" name=\"sex\" value=\"男\" title=\"男\" checked=\"\">\r\n                  <input type=\"radio\" name=\"sex\" value=\"女\" title=\"女\">\r\n                  <!--<input type=\"radio\" name=\"sex\" value=\"禁\" title=\"禁用\" disabled=\"\">-->\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">年龄</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"userage\" lay-verify=\"userAge\" autocomplete=\"off\" placeholder=\"请输入年龄\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">分期</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"stage\" autocomplete=\"off\" placeholder=\"请输入分期\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">血肌酐</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"bloodCreatinine\" autocomplete=\"off\" placeholder=\"请输入血肌酐指标\"\r\n                           lay-verify=\"userBloodCreatinine\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">eGFR值</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"egfr\" lay-verify=\"required\" lay-reqtext=\"eGFR值不能为空\" autocomplete=\"off\"\r\n                           placeholder=\"请先计算eGFR值\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <button type=\"button\" class=\"layui-btn layui-btn-normal\" id=\"LAY-component-form-egfr\">计算eGFR值</button>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">脉波表格</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"fileName\" id=\"selectFileName\" lay-verify=\"fileName\"\r\n                           lay-reqtext=\"请先选择脉搏数据文件\" autocomplete=\"off\" placeholder=\"未选择文件\" class=\"layui-input\"\r\n                           readonly=\"readonly\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <!--\t\t\t\t\t<input type=\"file\" name=\"pulseFile\" class=\"file\">-->\r\n                  <a href=\"javascript:;\" class=\"file\">点击选择文件\r\n                    <input type=\"file\" name=\"pulseFile\" id=\"selectFile\" class=\"file\">\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">脉象类型</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"pulseType\" id=\"pulseType\" autocomplete=\"off\" placeholder=\"预测结果\"\r\n                           class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <button class=\"layui-btn\" id=\"commit\" lay-submit=\"*\" lay-filter=\"forecastInformation\"\r\n                          id=\"LAY-component-form-result\">脉象类型预测\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>     <!--脉象预测-->\r\n          <div class=\"layui-tab-item\">\r\n            <form name=\"myForm2\" id=\"form2\" class=\"layui-form layui-form-pane\" action=\"##\" onsubmit=\"return false\"\r\n                  method=\"post\" lay-filter=\"selectNumber\" enctype='multipart/form-data'>\r\n              <div class=\"layui-form-item\">\r\n                <label class=\"layui-form-label\">验证表格数</label>\r\n                <div class=\"layui-input-inline\">\r\n                  <select name=\"selectNumber\" lay-verify=\"required\" lay-filter=\"selectNum\" class=\"select\">\r\n                    <option value=\"50\" selected=\"selected\">50</option>\r\n                    <option value=\"100\">100</option>\r\n                    <option value=\"200\">200</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <div id=\"pulsePredictChartDom\" style=\"width: 30%; height: 500%;float: left\"></div><!--症状统计-->\r\n            <div id=\"pulsePredictChartBar\" style=\"width: 70%; height: 500%;float: right\"></div><!--验证详情-->\r\n            <div id=\"pulsePredictDisplay\" style=\"width: 30%; float: left;text-align: center;\"></div><!--准确率显示-->\r\n          </div>                <!--脉象预测准确率展示-->\r\n          <div class=\"layui-tab-item\">内容3</div>         <!--舌象预测-->\r\n          <div class=\"layui-tab-item\">内容4</div>         <!--舌象预测准确率展示-->\r\n          <div class=\"layui-tab-item\">\r\n            <fieldset class=\"layui-elem-field layui-field-title\" style=\"margin-top: 15px;\">\r\n              <legend>输入病人的各项指标</legend>\r\n            </fieldset>\r\n            <form name=\"myForm3\" id=\"form3\" class=\"layui-form layui-form-pane\" action=\"##\" onsubmit=\"return false\" method=\"post\" lay-filter=\"forecastInformation3\"\r\n                  enctype='multipart/form-data'>\r\n\r\n              <div class=\"layui-form-item\" pane=\"\">\r\n                <label class=\"layui-form-label\">性别</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"radio\" name=\"sex\" value=\"男\" title=\"男\" checked=\"\">\r\n                  <input type=\"radio\" name=\"sex\" value=\"女\" title=\"女\">\r\n                  <!--<input type=\"radio\" name=\"sex\" value=\"禁\" title=\"禁用\" disabled=\"\">-->\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">年龄</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"userage\" lay-verify=\"userAge\" autocomplete=\"off\" placeholder=\"请输入年龄\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">分期</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"stage\" autocomplete=\"off\" placeholder=\"请输入分期\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">血肌酐</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"bloodCreatinine\" autocomplete=\"off\" placeholder=\"请输入血肌酐指标\"\r\n                           lay-verify=\"userBloodCreatinine\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <label class=\"layui-form-label\">舌象症状</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"text\" name=\"tongueSymptoms\" lay-verify=\"required\" lay-reqtext=\"请输入舌象症状\" placeholder=\"请输入舌象症状\" autocomplete=\"off\" class=\"layui-input\">\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <label class=\"layui-form-label\">脉象症状</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"text\" name=\"pulseSymptoms\" lay-verify=\"required\" lay-reqtext=\"请输入脉象症状\" placeholder=\"请输入脉象症状\" autocomplete=\"off\" class=\"layui-input\">\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">eGFR值</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"egfr\" lay-verify=\"required\" lay-reqtext=\"eGFR值不能为空\" autocomplete=\"off\"\r\n                           placeholder=\"请先计算eGFR值\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <button type=\"button\" class=\"layui-btn layui-btn-normal\" id=\"LAY-component-form-egfr3\">计算eGFR值</button>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">肾象类型</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"kindneyType\" id=\"kindneyType\" autocomplete=\"off\" placeholder=\"预测结果\"\r\n                           class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <button class=\"layui-btn\" id=\"commit3\" lay-submit=\"*\" lay-filter=\"forecastInformation3\"\r\n                          id=\"LAY-component-form-result3\">肾象类型预测\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>                <!--肾象预测-->\r\n          <div class=\"layui-tab-item\">内容6</div>         <!--肾象预测准确率展示-->\r\n          <div class=\"layui-tab-item\">\r\n            <fieldset class=\"layui-elem-field layui-field-title\" style=\"margin-top: 15px;\">\r\n              <legend>输入病人的各项指标</legend>\r\n            </fieldset>\r\n            <form name=\"myForm4\" id=\"form4\" class=\"layui-form layui-form-pane\" action=\"##\" onsubmit=\"return false\" method=\"post\" lay-filter=\"forecastInformation4\"\r\n                  enctype='multipart/form-data'>\r\n\r\n              <div class=\"layui-form-item\" pane=\"\">\r\n                <label class=\"layui-form-label\">性别</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"radio\" name=\"sex\" value=\"男\" title=\"男\" checked=\"\">\r\n                  <input type=\"radio\" name=\"sex\" value=\"女\" title=\"女\">\r\n                  <!--<input type=\"radio\" name=\"sex\" value=\"禁\" title=\"禁用\" disabled=\"\">-->\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">年龄</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"userage\" lay-verify=\"userAge\" autocomplete=\"off\" placeholder=\"请输入年龄\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">ALT值</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"alt\" autocomplete=\"off\" placeholder=\"请输入ALT指标\" lay-verify=\"verify_alt\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <label class=\"layui-form-label\">舌象症状</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"text\" name=\"tongueSymptoms\" lay-verify=\"required\" lay-reqtext=\"请输入舌象症状\" placeholder=\"请输入舌象症状\" autocomplete=\"off\" class=\"layui-input\">\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <label class=\"layui-form-label\">脉象症状</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"text\" name=\"pulseSymptoms\" lay-verify=\"required\" lay-reqtext=\"请输入脉象症状\" placeholder=\"请输入脉象症状\" autocomplete=\"off\" class=\"layui-input\">\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">肝象类型</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"liverType\" id=\"liverType\" autocomplete=\"off\" placeholder=\"预测结果\"\r\n                           class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <button class=\"layui-btn\" id=\"commit4\" lay-submit=\"*\" lay-filter=\"forecastInformation4\"\r\n                          id=\"LAY-component-form-result4\">肝象类型预测\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>                <!--肝象预测-->\r\n          <div class=\"layui-tab-item\">内容8</div>         <!--肝象预测准确率展示-->\r\n          <div class=\"layui-tab-item\">\r\n            <fieldset class=\"layui-elem-field layui-field-title\" style=\"margin-top: 15px;\">\r\n              <legend>输入病人的各项指标</legend>\r\n            </fieldset>\r\n            <form name=\"myForm3\" id=\"form5\" class=\"layui-form layui-form-pane\" action=\"##\" onsubmit=\"return false\" method=\"post\" lay-filter=\"forecastInformation5\"\r\n                  enctype='multipart/form-data'>\r\n\r\n              <div class=\"layui-form-item\" pane=\"\">\r\n                <label class=\"layui-form-label\">性别</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"radio\" name=\"sex\" value=\"男\" title=\"男\" checked=\"\">\r\n                  <input type=\"radio\" name=\"sex\" value=\"女\" title=\"女\">\r\n                  <!--<input type=\"radio\" name=\"sex\" value=\"禁\" title=\"禁用\" disabled=\"\">-->\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">年龄</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"userage\" lay-verify=\"userAge\" autocomplete=\"off\" placeholder=\"请输入年龄\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">FEV1</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"FEV1\" autocomplete=\"off\" placeholder=\"请输入FEV1指标\"\r\n                           lay-verify=\"verify_number\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">FVC</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"FVC\" lay-verify=\"verify_number\" autocomplete=\"off\" placeholder=\"请输入FVC指标\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">FEV1%</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"FEV1%\" lay-verify=\"verify_number\" autocomplete=\"off\" placeholder=\"请输入FEV1%指标\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">FEV1/FVC</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"FEV1/FVC\" lay-verify=\"verify_number\" autocomplete=\"off\" placeholder=\"请输入FEV1/FVC改指标\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">PEF</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"PEF\" lay-verify=\"verify_number\" autocomplete=\"off\" placeholder=\"请输入PEF指标\" class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <label class=\"layui-form-label\">西医诊断</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"text\" name=\"wm_diagnosis\" lay-verify=\"required\" autocomplete=\"off\" placeholder=\"请输入西医诊断结果\" class=\"layui-input\">\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <label class=\"layui-form-label\">舌象症状</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"text\" name=\"tongueSymptoms\" lay-verify=\"required\" lay-reqtext=\"请输入舌象症状\" placeholder=\"请输入舌象症状\" autocomplete=\"off\" class=\"layui-input\">\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <label class=\"layui-form-label\">脉象症状</label>\r\n                <div class=\"layui-input-block\">\r\n                  <input type=\"text\" name=\"pulseSymptoms\" lay-verify=\"required\" lay-reqtext=\"请输入脉象症状\" placeholder=\"请输入脉象症状\" autocomplete=\"off\" class=\"layui-input\">\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"layui-form-item\">\r\n                <div class=\"layui-inline\">\r\n                  <label class=\"layui-form-label\">肺象类型</label>\r\n                  <div class=\"layui-input-inline\">\r\n                    <input type=\"text\" name=\"lungType\" id=\"lungType\" autocomplete=\"off\" placeholder=\"预测结果\"\r\n                           class=\"layui-input\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"layui-inline\">\r\n                  <button class=\"layui-btn\" id=\"commit5\" lay-submit=\"*\" lay-filter=\"forecastInformation5\"\r\n                          id=\"LAY-component-form-result5\">肺象类型预测\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>                <!--肺象预测-->\r\n          <div class=\"layui-tab-item\">内容10</div>         <!--肺象预测准确率展示-->\r\n        </div>\r\n      </div>\r\n    <script src=\"../static/layui/layui.js\"></script>\r\n    <script src=\"../static/js/jquery.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../static/js/echarts.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../static/js/echarts.min.js\"></script>\r\n    <!--脉搏预测子页面js-->\r\n    <script>\r\n    layui.use('element', function(){\r\n      var $ = layui.jquery\r\n      ,element = layui.element; //Tab的切换功能，切换事件监听等，需要依赖element模块\r\n       $('.layui-tab-title').on('click', function(title) {\r\n          if(title.toElement.textContent==\"脉象预测准确率展示\"){\r\n            layer.load(2);\r\n            $.ajax({\r\n                url: \"pulsePrediction_accuracy\",\r\n                type: \"POST\",\r\n                dataType : \"json\",\r\n                // processData: false,\r\n                // contentType:false,\r\n                // data: $('#form1').serialize(),\r\n                data: {\"selectTestNum\": \"50\" },\r\n                success: function (newData) {\r\n                  layer.closeAll('loading');\r\n                  var pulsePredict_dom = document.getElementById('pulsePredictChartDom');\r\n                  var pulsePredict_chart = echarts.init(pulsePredict_dom);\r\n                  var pulsePredict_option={\r\n                    title: {\r\n                        text: '脉搏预测验证情况分布',\r\n                        subtext: newData.testNum+'个脉搏验证表格',\r\n                        left: 'center'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'item'\r\n                    },\r\n                    legend: {\r\n                        orient: 'vertical',\r\n                        left: 'left',\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '预测准确率'+newData.accuracy*100+'%',\r\n                            type: 'pie',\r\n                            radius: '60%',\r\n                          label: {\r\n                                normal: {\r\n                                    position:\"inner\",\r\n                                    show:false,\r\n                                }\r\n                            },\r\n                            data: [\r\n                                {value: newData.num_pos, name: '预测正确' },\r\n                                {value: newData.num_neg, name: '预测错误' },\r\n                            ],\r\n                            emphasis: {\r\n                                itemStyle: {\r\n                                    shadowBlur: 10,\r\n                                    shadowOffsetX: 0,\r\n                                    shadowColor: 'rgba(0,0,0,0.5)'\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                  };\r\n                  pulsePredict_chart.setOption(pulsePredict_option);\r\n\r\n                  var pulsePredict_bar = document.getElementById('pulsePredictChartBar');\r\n                  var pulsePredict_chartBar = echarts.init(pulsePredict_bar);\r\n                  var pulsePredictBar_option = {\r\n                    title: {\r\n                      text: '脉搏预测验证',\r\n                      subtext: '验证详情',\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis',\r\n                        axisPointer: {\r\n                            type: 'cross',\r\n                            label: {\r\n                                backgroundColor: '#283b56'\r\n                            }\r\n                        },\r\n                        formatter : function(params){\r\n                          var a=params[0];\r\n                          var b=params[1];\r\n                          var str='编号：'+a.axisValue;\r\n                          str += '<br /><span style=\"display:inline-block;margin-right:5px;border-radius:50%;width:10px;height:10px;left:5px;background-color:'+a.color+'\"></span>' + a.seriesName + \" : \" + a.value + \"<br />\";\r\n                          str += '<span style=\"display:inline-block;margin-right:5px;border-radius:50%;width:10px;height:10px;left:5px;background-color:'+b.color+'\"></span>' + b.seriesName + \" : \" + b.value;\r\n                          return str;\r\n                        }\r\n                    },\r\n                    legend: {\r\n                        data:['预测类别', '标签类别']\r\n                    },\r\n                    dataZoom: {\r\n                        show: false,\r\n                        start: 0,\r\n                        end: 100\r\n                    },\r\n                    xAxis:\r\n                    {\r\n                      name:'脉搏表格编号',\r\n                      nameLocation:'end',\r\n                        type: 'category',\r\n                        boundaryGap: true,\r\n                        data: newData.idSet\r\n                    },\r\n                    yAxis:\r\n                    {\r\n                      name:'脉搏类型',\r\n                      nameLocation:'end',\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: ['', '沉细', '细', '弦', '弦细', '滑', '濡']\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '标签类别',\r\n                            type: 'line',\r\n                            xAxisIndex: 0,\r\n                            yAxisIndex: 0,\r\n                            data: newData.labelType\r\n                        },\r\n                        {\r\n                            name: '预测类别',\r\n                            type: 'line',\r\n                            data: newData.predictType\r\n                        }\r\n                    ]\r\n                  };\r\n                  pulsePredict_chartBar.setOption(pulsePredictBar_option);\r\n\r\n                  var pulsePredictDisplay=document.getElementById('pulsePredictDisplay');\r\n                  pulsePredictDisplay.innerHTML='<h2 class=\"layui-timeline-title\"><b>预测准确率：'+newData.accuracy*100+'%</b></h2>';\r\n                },\r\n                error: function () {\r\n                  layer.msg('处理出错！', { icon: 7, time: 2000, shade: [0.6, '#000', true] });\r\n                }\r\n            });\r\n          }else if(title.toElement.textContent==\"B标题\"){\r\n            alert(title.toElement.textContent);\r\n          }else if(title.toElement.textContent==\"C标题\"){\r\n            alert(title.toElement.textContent);\r\n          }\r\n       });\r\n\r\n      //触发事件\r\n      \r\n      $('.site-demo-active').on('click', function(){\r\n        var othis = $(this), type = othis.data('type');\r\n        active[type] ? active[type].call(this, othis) : '';\r\n        console.log(1111)\r\n      });\r\n\r\n      //Hash地址的定位\r\n      var layid = location.hash.replace(/^#test=/, '');\r\n      element.tabChange('test', layid);\r\n\r\n      element.on('tab(test)', function(elem){\r\n        location.hash = 'test='+ $(this).attr('lay-id');\r\n        console.log(1444)\r\n      });\r\n\r\n    });\r\n    </script>\r\n    <script>\r\n    layui.use(['form', 'layedit', 'laydate'], function(){\r\n      var form = layui.form\r\n      ,layer = layui.layer\r\n      ,layedit = layui.layedit\r\n      ,laydate = layui.laydate;\r\n\r\n      //日期\r\n      laydate.render({\r\n        elem: '#date'\r\n      });\r\n      laydate.render({\r\n        elem: '#date1'\r\n      });\r\n\r\n      //创建一个编辑器\r\n      var editIndex = layedit.build('LAY_demo_editor');\r\n\r\n      //自定义验证规则\r\n      form.verify({\r\n        userAge: function(value){\r\n          var re = /^[0-9]+.?[0-9]*$/;\r\n          if(value==''){\r\n            return '年龄不能为空！';\r\n          }\r\n          if (!re.test(value)){\r\n            return '输入的年龄不是数字！';\r\n          }\r\n          if(value<=0||value>120){\r\n            return '请输入正确的年龄！';\r\n          }\r\n        }\r\n        ,pass: [\r\n          /^[\\S]{6,12}$/\r\n          ,'密码必须6到12位，且不能出现空格'\r\n        ]\r\n        ,userBloodCreatinine: function(value){\r\n          var re = /^[0-9]+.?[0-9]*$/;\r\n          if (!re.test(value)){\r\n            return '请输入正确的血肌酐指标值！';\r\n          }\r\n        }\r\n        ,fileName: function (value){\r\n          if(value.length <= 0)\r\n            return '请先选择脉搏数据文件';\r\n        }\r\n      });\r\n\r\n      //监听指定开关\r\n      form.on('switch(switchTest)', function(data){\r\n        layer.msg('开关checked：'+ (this.checked ? 'true' : 'false'), {\r\n          offset: '6px'\r\n        });\r\n        layer.tips('温馨提示：请注意开关状态的文字可以随意定义，而不仅仅是ON|OFF', data.othis)\r\n      });\r\n\r\n      //监听提交\r\n      form.on('submit(forecastInformation)', function(data){\r\n        var submitData = new FormData($(\"#form1\")[0]);\r\n        $.ajax({\r\n            url: \"disease_prediction\",\r\n            type: \"POST\",\r\n            dataType : \"json\",\r\n            processData: false,\r\n            contentType:false,\r\n            // data: $('#form1').serialize(),\r\n            data:submitData,\r\n            success: function (newData) {\r\n              if(newData.fileRead=='success'){\r\n                form.val('forecastInformation', {\r\n                  \"pulseType\": newData.pulseType.toString()\r\n                });\r\n                layer.alert(newData.pulseType.toString(), {icon: 6,title:'脉象预测结果',time:5000,skin: 'layui-layer-lan',anim:4});\r\n              }\r\n              else if(newData.fileRead=='fail'){\r\n                layer.msg('导入csv文件行列小于2560*57，或文件编码格式不是\\'utf-16 le\\'和\\'utf-8\\'', { icon: 7, time: 4000, shade: [0.6, '#000', true] });\r\n              }\r\n            },\r\n            error: function () {\r\n              layer.msg('处理出错！', { icon: 7, time: 2000, shade: [0.6, '#000', true] });\r\n            }\r\n        });\r\n        // layer.alert(JSON.stringify(data.field), {\r\n        //   title: '最终的提交信息'\r\n        // })\r\n        // alert(data);\r\n        return false;\r\n      });\r\n\r\n      //表单赋值\r\n      layui.$('#LAY-component-form-setval').on('click', function(){\r\n        form.val('example', {\r\n          \"username\": \"贤心\" // \"name\": \"value\"\r\n          ,\"password\": \"123456\"\r\n          ,\"interest\": 1\r\n          ,\"like[write]\": true //复选框选中状态\r\n          ,\"close\": true //开关状态\r\n          ,\"sex\": \"女\"\r\n          ,\"desc\": \"我爱 layui\"\r\n        });\r\n      });\r\n\r\n      //表单取值\r\n      layui.$('#LAY-component-form-getval').on('click', function(){\r\n        var data = form.val('example');\r\n        alert(JSON.stringify(data));\r\n      });\r\n\r\n      //利用表单已填信息计算eGFR值\r\n      layui.$('#LAY-component-form-egfr').on('click', function(){\r\n        var data = form.val('forecastInformation');\r\n        var jsonData = JSON.stringify(data);// 转成JSON格式\r\n        //var result = $.parseJSON(jsonData);// 转成JSON对象\r\n        var objectData = JSON.parse(jsonData);//转成JSON对象\r\n        if(objectData.userage==\"\"){\r\n          layer.msg('请输入年龄用于计算！', { icon: 7, time: 1000, shade: [0.6, '#000', true] });\r\n          return ;\r\n        }\r\n        var re = /^[0-9]+.?[0-9]*$/;//数字判断验证规则\r\n        age=parseFloat(objectData.userage);\r\n        if (age==NaN || !re.test(age)){\r\n          layer.msg('输入的年龄非正常数字！', { icon: 7, time: 1000, shade: [0.6, '#000', true] });\r\n          return ;\r\n        }\r\n        if(age<0||age>120){\r\n          layer.msg('年龄超出正常范围！', { icon: 7, time: 1000, shade: [0.6, '#000', true] });\r\n          return ;\r\n        }\r\n        if(objectData.bloodCreatinine==\"\"){\r\n          layer.msg('请输入血肌酐值用于计算！', { icon: 7, time: 1000, shade: [0.6, '#000', true] });\r\n          return ;\r\n        }\r\n        bloodCreatinine=parseFloat(objectData.bloodCreatinine);\r\n        if (bloodCreatinine==NaN || !re.test(bloodCreatinine)){\r\n          layer.msg('请输入正确的血肌酐指标值！', { icon: 7, time: 1000, shade: [0.6, '#000', true] });\r\n          return ;\r\n        }\r\n        var egfr = 0;\r\n        if(objectData.sex.toString()==\"男\"){\r\n          egfr=186*(objectData.bloodCreatinine/88.41)**-1.154*(objectData.userage**-0.203)*1.233;\r\n        }\r\n        else if(objectData.sex.toString()==\"女\"){\r\n          egfr=186*(objectData.bloodCreatinine/88.41)**-1.154*0.742*(objectData.userage**-0.203)*1.233;\r\n        }\r\n        //alert(jsonData);\r\n        //alert(objectData.userage);//获取某key的对应value\r\n        //alert(JSON.stringify(data));\r\n        //更新计算得到的结果\r\n        form.val('forecastInformation', {\r\n          // \"sex\": objectData.sex.toString() // \"name\": \"value\"\r\n          // ,\"userage\": objectData.userage.toString()\r\n          // ,\"stage\": objectData.stage.toString()\r\n          // ,\"bloodCreatinine\": objectData.bloodCreatinine.toString(),\r\n          \"egfr\": egfr.toString()\r\n        });\r\n      });\r\n      // //layui框架渲染（否则下拉框不显示）\r\n      // layui.use('form', function () {\r\n      //     var form = layui.form;\r\n      //     form.render();\r\n      //     //更新数据\r\n      //     var newData = {{newData | tojson}};//获取后端返回的结果\r\n      //     objectData = JSON.parse(newData);\r\n      //     //alert(objectData.pulseType.toString());\r\n      //     //document.getElementById(\"pulseType\").innerText = objectData.pulseType.toString();\r\n      //     if(objectData.fileRead=='success'){\r\n      //       form.val('forecastInformation', {\r\n      //       \"sex\": objectData.sex.toString() // \"name\": \"value\"\r\n      //       ,\"userage\": objectData.userage.toString()\r\n      //       ,\"stage\": objectData.stage.toString()\r\n      //       ,\"bloodCreatinine\": objectData.bloodCreatinine.toString()\r\n      //       ,\"egfr\": objectData.egfr.toString()\r\n      //       ,\"fileName\" : objectData.fileName.toString()\r\n      //       ,\"pulseType\": objectData.pulseType.toString()\r\n      //       });\r\n      //     }\r\n      //     else if(objectData.fileRead=='fail'){\r\n      //       form.val('forecastInformation', {\r\n      //       \"sex\": '男' // \"name\": \"value\"\r\n      //       ,\"userage\": ''\r\n      //       ,\"stage\": ''\r\n      //       ,\"bloodCreatinine\": ''\r\n      //       ,\"egfr\": ''\r\n      //       ,\"fileName\" : ''\r\n      //       ,\"pulseType\": ''\r\n      //       });\r\n      //       layer.msg('导入csv文件行列小于2560*57，或文件编码格式不是\\'utf-16 le\\'和\\'utf-8\\'', { icon: 7, time: 4000, shade: [0.6, '#000', true] });\r\n      //     }\r\n      // });\r\n    });\r\n    </script>\r\n    <!--文件名展示框与文件上传按钮关联js-->\r\n    <script>\r\n    $(\".file\").on(\"change\",\"input[type='file']\",function(){\r\n      var fileNameText=document.getElementById(\"selectFileName\");\r\n      var fileInput=document.getElementById(\"selectFile\");\r\n      fileNameText.value=fileInput.files[0].name;\r\n      //alert(fileNameText.placeholder);\r\n    })\r\n    </script>\r\n      <script>\r\n        layui.use(['element', 'form'], function () {\r\n          var $ = layui.jquery\r\n          var element = layui.element;\r\n          var form = layui.form;\r\n          var layer = layui.layer;\r\n          form.on('select(selectNum)', function (data) {\r\n            var postData={\"selectTestNum\": \"50\" };\r\n            var message = data.value;\r\n            if(message == \"50\"){\r\n              postData={\"selectTestNum\": \"50\" };\r\n            }\r\n            else if (message == \"100\") {\r\n              postData={\"selectTestNum\": \"100\" };\r\n            } else if (message == \"200\") {\r\n              postData={\"selectTestNum\": \"200\" };\r\n            }\r\n            layer.load(2);\r\n            $.ajax({\r\n                url: \"pulsePrediction_accuracy\",\r\n                type: \"POST\",\r\n                dataType : \"json\",\r\n                // processData: false,\r\n                // contentType:false,\r\n                // data: $('#form1').serialize(),\r\n                data: postData,\r\n                success: function (newData) {\r\n                  layer.closeAll('loading');\r\n                  var pulsePredict_dom = document.getElementById('pulsePredictChartDom');\r\n                  var pulsePredict_chart = echarts.init(pulsePredict_dom);\r\n                  var pulsePredict_option={\r\n                    title: {\r\n                        text: '脉搏预测验证情况分布',\r\n                        subtext: newData.testNum+'个脉搏验证表格',\r\n                        left: 'center'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'item'\r\n                    },\r\n                    legend: {\r\n                        orient: 'vertical',\r\n                        left: 'left',\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '预测准确率'+newData.accuracy*100+'%',\r\n                            type: 'pie',\r\n                            radius: '60%',\r\n                          label: {\r\n                                normal: {\r\n                                    position:\"inner\",\r\n                                    show:false,\r\n                                }\r\n                            },\r\n                            data: [\r\n                                {value: newData.num_pos, name: '预测正确' },\r\n                                {value: newData.num_neg, name: '预测错误' },\r\n                            ],\r\n                            emphasis: {\r\n                                itemStyle: {\r\n                                    shadowBlur: 10,\r\n                                    shadowOffsetX: 0,\r\n                                    shadowColor: 'rgba(0,0,0,0.5)'\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                  };\r\n                  pulsePredict_chart.setOption(pulsePredict_option);\r\n\r\n                  var pulsePredict_bar = document.getElementById('pulsePredictChartBar');\r\n                  var pulsePredict_chartBar = echarts.init(pulsePredict_bar);\r\n                  var pulsePredictBar_option = {\r\n                    title: {\r\n                      text: '脉搏预测验证',\r\n                      subtext: '验证详情',\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis',\r\n                        axisPointer: {\r\n                            type: 'cross',\r\n                            label: {\r\n                                backgroundColor: '#283b56'\r\n                            }\r\n                        },\r\n                        formatter : function(params){\r\n                          var a=params[0];\r\n                          var b=params[1];\r\n                          var str='编号：'+a.axisValue;\r\n                          str += '<br /><span style=\"display:inline-block;margin-right:5px;border-radius:50%;width:10px;height:10px;left:5px;background-color:'+a.color+'\"></span>' + a.seriesName + \" : \" + a.value + \"<br />\";\r\n                          str += '<span style=\"display:inline-block;margin-right:5px;border-radius:50%;width:10px;height:10px;left:5px;background-color:'+b.color+'\"></span>' + b.seriesName + \" : \" + b.value;\r\n                          return str;\r\n                        }\r\n                    },\r\n                    legend: {\r\n                        data:['预测类别', '标签类别']\r\n                    },\r\n                    dataZoom: {\r\n                        show: false,\r\n                        start: 0,\r\n                        end: 100\r\n                    },\r\n                    xAxis:\r\n                    {\r\n                      name:'脉搏表格编号',\r\n                      nameLocation:'end',\r\n                        type: 'category',\r\n                        boundaryGap: true,\r\n                        data: newData.idSet\r\n                    },\r\n                    yAxis:\r\n                    {\r\n                      name:'脉搏类型',\r\n                      nameLocation:'end',\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: ['', '沉细', '细', '弦', '弦细', '滑', '濡']\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '标签类别',\r\n                            type: 'line',\r\n                            xAxisIndex: 0,\r\n                            yAxisIndex: 0,\r\n                            data: newData.labelType\r\n                        },\r\n                        {\r\n                            name: '预测类别',\r\n                            type: 'line',\r\n                            data: newData.predictType\r\n                        }\r\n                    ]\r\n                  };\r\n                  pulsePredict_chartBar.setOption(pulsePredictBar_option);\r\n                  pulsePredictDisplay.innerHTML='<h2 class=\"layui-timeline-title\"><b>预测准确率：'+newData.accuracy*100+'%</b></h2>';\r\n                },\r\n                error: function () {\r\n                  layer.msg('处理出错！', { icon: 7, time: 2000, shade: [0.6, '#000', true] });\r\n                }\r\n            });\r\n          });\r\n        });\r\n      </script>\r\n    <!--肾象预测子页面js-->\r\n    <script>\r\n    layui.use(['form', 'layedit', 'laydate'], function(){\r\n      var form = layui.form\r\n      ,layer = layui.layer\r\n      ,layedit = layui.layedit\r\n      ,laydate = layui.laydate;\r\n      //监听提交\r\n      form.on('submit(forecastInformation3)', function(data){\r\n        var submitData = new FormData($(\"#form3\")[0]);\r\n        $.ajax({\r\n            url: \"kindney_prediction\",\r\n            type: \"POST\",\r\n            dataType : \"json\",\r\n            processData: false,\r\n            contentType:false,\r\n            // data: $('#form1').serialize(),\r\n            data:submitData,\r\n            success: function (newData) {\r\n              if(newData.execute=='success'){\r\n                form.val('forecastInformation3', {\r\n                  \"kindneyType\": newData.kindneyType.toString()\r\n                });\r\n                layer.alert(newData.kindneyType.toString(), {icon: 6,title:'肾象预测结果',time:5000,skin: 'layui-layer-lan',anim:4});\r\n              }\r\n              else if(newData.execute=='fail'){\r\n                layer.msg('处理出错', { icon: 7, time: 2000, shade: [0.6, '#000', true] });\r\n              }\r\n            },\r\n            error: function () {\r\n              layer.msg('处理出错！', { icon: 7, time: 2000, shade: [0.6, '#000', true] });\r\n            }\r\n        });\r\n        return false;\r\n      });\r\n      //利用表单已填信息计算eGFR值\r\n      layui.$('#LAY-component-form-egfr3').on('click', function(){\r\n        var data = form.val('forecastInformation3');\r\n        var jsonData = JSON.stringify(data);// 转成JSON格式\r\n        //var result = $.parseJSON(jsonData);// 转成JSON对象\r\n        var objectData = JSON.parse(jsonData);//转成JSON对象\r\n        if(objectData.userage==\"\"){\r\n          layer.msg('请输入年龄用于计算！', { icon: 7, time: 1000, shade: [0.6, '#000', true] });\r\n          return ;\r\n        }\r\n        var re = /^[0-9]+.?[0-9]*$/;//数字判断验证规则\r\n        age=parseFloat(objectData.userage);\r\n        if (age==NaN || !re.test(age)){\r\n          layer.msg('输入的年龄非正常数字！', { icon: 7, time: 1000, shade: [0.6, '#000', true] });\r\n          return ;\r\n        }\r\n        if(age<0||age>120){\r\n          layer.msg('年龄超出正常范围！', { icon: 7, time: 1000, shade: [0.6, '#000', true] });\r\n          return ;\r\n        }\r\n        if(objectData.bloodCreatinine==\"\"){\r\n          layer.msg('请输入血肌酐值用于计算！', { icon: 7, time: 1000, shade: [0.6, '#000', true] });\r\n          return ;\r\n        }\r\n        bloodCreatinine=parseFloat(objectData.bloodCreatinine);\r\n        if (bloodCreatinine==NaN || !re.test(bloodCreatinine)){\r\n          layer.msg('请输入正确的血肌酐指标值！', { icon: 7, time: 1000, shade: [0.6, '#000', true] });\r\n          return ;\r\n        }\r\n        var egfr = 0;\r\n        if(objectData.sex.toString()==\"男\"){\r\n          egfr=186*(objectData.bloodCreatinine/88.41)**-1.154*(objectData.userage**-0.203)*1.233;\r\n        }\r\n        else if(objectData.sex.toString()==\"女\"){\r\n          egfr=186*(objectData.bloodCreatinine/88.41)**-1.154*0.742*(objectData.userage**-0.203)*1.233;\r\n        }\r\n        //更新计算得到的结果\r\n        form.val('forecastInformation3', {\r\n          \"egfr\": egfr.toString()\r\n        });\r\n      });\r\n    });\r\n    </script>\r\n    <!--肝象预测子页面js-->\r\n    <script>\r\n    layui.use(['form', 'layedit', 'laydate'], function(){\r\n      var form = layui.form\r\n      ,layer = layui.layer\r\n      ,layedit = layui.layedit\r\n      ,laydate = layui.laydate;\r\n      //自定义验证规则\r\n      form.verify({\r\n        verify_alt: function(value){\r\n          var re = /^[0-9]+.?[0-9]*$/;\r\n          if (!re.test(value)){\r\n            return '请输入正确的ALT指标值！';\r\n          }\r\n        }\r\n      });\r\n      //监听提交\r\n      form.on('submit(forecastInformation4)', function(data){\r\n        var submitData = new FormData($(\"#form4\")[0]);\r\n        $.ajax({\r\n            url: \"liver_prediction\",\r\n            type: \"POST\",\r\n            dataType : \"json\",\r\n            processData: false,\r\n            contentType:false,\r\n            // data: $('#form1').serialize(),\r\n            data:submitData,\r\n            success: function (newData) {\r\n              if(newData.execute=='success'){\r\n                form.val('forecastInformation4', {\r\n                  \"liverType\": newData.liverType.toString()\r\n                });\r\n                layer.alert(newData.liverType.toString(), {icon: 6,title:'肝象预测结果',time:5000,skin: 'layui-layer-lan',anim:4});\r\n              }\r\n              else if(newData.execute=='fail'){\r\n                layer.msg('处理出错', { icon: 7, time: 2000, shade: [0.6, '#000', true] });\r\n              }\r\n            },\r\n            error: function () {\r\n              layer.msg('处理出错！', { icon: 7, time: 2000, shade: [0.6, '#000', true] });\r\n            }\r\n        });\r\n        return false;\r\n      });\r\n    });\r\n    </script>\r\n    <!--肺象预测子页面js-->\r\n    <script>\r\n    layui.use(['form', 'layedit', 'laydate'], function(){\r\n      var form = layui.form\r\n      ,layer = layui.layer\r\n      ,layedit = layui.layedit\r\n      ,laydate = layui.laydate;\r\n      //自定义验证规则\r\n      form.verify({\r\n        verify_number: function(value){\r\n          var re = /^[0-9]+.?[0-9]*$/;\r\n          if (!re.test(value)){\r\n            return '请输入正确的数值指标！';\r\n          }\r\n        }\r\n      });\r\n      //监听提交\r\n      form.on('submit(forecastInformation5)', function(data){\r\n        var submitData = new FormData($(\"#form5\")[0]);\r\n        $.ajax({\r\n            url: \"lung_prediction\",\r\n            type: \"POST\",\r\n            dataType : \"json\",\r\n            processData: false,\r\n            contentType:false,\r\n            // data: $('#form1').serialize(),\r\n            data:submitData,\r\n            success: function (newData) {\r\n              if(newData.execute=='success'){\r\n                form.val('forecastInformation5', {\r\n                  \"lungType\": newData.lungType.toString()\r\n                });\r\n                layer.alert(newData.lungType.toString(), {icon: 6,title:'肺象预测结果',time:5000,skin: 'layui-layer-lan',anim:4});\r\n              }\r\n              else if(newData.execute=='fail'){\r\n                layer.msg('处理出错', { icon: 7, time: 2000, shade: [0.6, '#000', true] });\r\n              }\r\n            },\r\n            error: function () {\r\n              layer.msg('处理出错！', { icon: 7, time: 2000, shade: [0.6, '#000', true] });\r\n            }\r\n        });\r\n        return false;\r\n      });\r\n    });\r\n    </script>\r\n  </body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/diseasePrediction.html b/templates/diseasePrediction.html
--- a/templates/diseasePrediction.html	(revision 823e2b66f049f975566b23bd48a01d90c495a522)
+++ b/templates/diseasePrediction.html	(date 1624453099291)
@@ -5,7 +5,8 @@
     <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
     <title>病症预测页面</title>
 <style type="text/css">
-.file {
+.file,
+.imgFile {
     display: inline-block;
     height: 38px;
     line-height: 38px;
@@ -24,19 +25,72 @@
     /*text-decoration: none;*/
     /*text-indent: 0;*/
 }
-.file input {
+.file input,
+.imgFile input {
     position: absolute;
     font-size: 100px;
     right: 0;
     top: 0;
     opacity: 0;
 }
-.file:hover {
+.file:hover,
+.imgFile:hover {
     background: #78C3F3;
     border-color: #78C3F3;
     color: #004974;
     text-decoration: none;
 }
+</style>
+<style type="text/css">
+  .update_show img {
+    width: 400px;
+    height: 400px;
+    display: none;
+  }
+  .update_show .imgProgress {
+    position: absolute;
+    top: 50%;
+    left: 50%;
+    transform: translate(-50%, -50%);
+    width: 80%;
+    display: none;
+  }
+  .update_show {
+    position: relative;
+    width: 400px;
+    height: 400px;
+    border: 1px solid #ccc;
+    margin-top: 15px;
+  }
+  form[name="tongueForm"] {
+    margin-top: 15px;
+  }
+  .tonBatchSearch,
+  .pre_auc {
+    width: 30%;
+  }
+  .batch_show div{
+    margin: 0;
+    padding: 0;
+  }
+  .batch_show .component {
+    margin: 0 10px 20px;
+    float: left;
+    width: 18%;
+  }
+  .batch_show .component img {
+    width: 100%;
+    height: 250px;
+  }
+  .batch_show .lower {
+    text-align: center;
+    font-size: 16px;
+    border: 1px solid #ccc;
+    border-top: 0 ;
+  }
+  .uploadUi {
+    width: 200px;
+  }
 </style>
     <link rel="stylesheet" href="../static/layui/css/layui.css"/>
     <script src="../static/js/jquery.js"></script>
@@ -158,8 +212,87 @@
             <div id="pulsePredictChartBar" style="width: 70%; height: 500%;float: right"></div><!--验证详情-->
             <div id="pulsePredictDisplay" style="width: 30%; float: left;text-align: center;"></div><!--准确率显示-->
           </div>                <!--脉象预测准确率展示-->
-          <div class="layui-tab-item">内容3</div>         <!--舌象预测-->
-          <div class="layui-tab-item">内容4</div>         <!--舌象预测准确率展示-->
+          <div class="layui-tab-item">
+            <div class="layui-inline local">
+              <!--					<input type="file" name="pulseFile" class="file">-->
+              <a href="javascript:;" class="imgFile"
+                >点击选择图片
+                <input
+                  type="file"
+                  name="infoFile"
+                  id="selectImgFile"
+                  title=""
+                />
+              </a>
+            </div>
+            <div class="update_show">
+              <img>
+              <div class="layui-progress imgProgress" lay-filter="imgUpload">
+                <div class="layui-progress-bar" lay-percent="0%"></div>
+              </div>
+            </div>
+            <form name="tongueForm" class="layui-form layui-form-pane"lay-filter="tonguePrediction">
+              <div class="layui-form-item">
+                <div class="layui-inline">
+                  <label class="layui-form-label">舌色预测</label>
+                  <div class="layui-input-inline">
+                    <input type="text" name="tongueColor" placeholder="预测结果" class="layui-input">
+                  </div>
+                </div>
+                <div class="layui-form-item">
+                  <div class="layui-inline">
+                    <label class="layui-form-label">苔色预测</label>
+                    <div class="layui-input-inline">
+                      <input type="text" name="coatingColor" placeholder="预测结果" class="layui-input">
+                    </div>
+                  </div>
+                <div class="layui-form-item">
+                  <div class="layui-inline pre_btn">
+                    <button class="layui-btn" lay-submit lay-filter="doTonguePre">预测
+                    </button>
+                  </div>
+                  <div class="layui-inline uploadUi">
+                    <div class="layui-progress uploadProgress" lay-filter="upload">
+                      <div class="layui-progress-bar" lay-percent="0%"></div>
+                    </div>
+                    <span class="uploadZi"><i class="layui-icon layui-anim layui-anim-rotate layui-anim-loop">&#xe63d;</i>上传中</span>
+                  </div>
+                </div>
+              </div>
+              </div>
+            </form>
+          </div>
+          <div class="layui-tab-item">
+            <form name="tonBatchForm" class="layui-form layui-form-pane" lay-filter="tonBatchPre">
+
+            <div class="layui-form-item tonBatchSearch">
+                  <label class="layui-form-label">预测图片数</label>
+                  <div class="layui-input-block">
+                    <select name="batch" lay-verify="required" lay-filter="tonBatchSelect">
+                      <option value="">请选择</option>
+                      <option value="5">5</option>
+                      <option value="10">10</option>
+                      <option value="15">15</option>
+                    </select>
+                </div>
+              </div>
+              <div class="layui-form-item pre_auc">
+                  <label class="layui-form-label">预测准确度</label>
+                  <div class="layui-input-block">
+                    <input
+                      type="text"
+                      name="host"
+                      placeholder="预测准确度"
+                      class="layui-input"
+                      readonly
+                    />
+                </div>
+              </div>
+              </form>
+              <div class="batch_show">
+
+              </div>
+          </div>         <!--舌象预测准确率展示-->
           <div class="layui-tab-item">
             <fieldset class="layui-elem-field layui-field-title" style="margin-top: 15px;">
               <legend>输入病人的各项指标</legend>
@@ -242,6 +375,8 @@
             </form>
           </div>                <!--肾象预测-->
           <div class="layui-tab-item">内容6</div>         <!--肾象预测准确率展示-->
+          </div>
+          
           <div class="layui-tab-item">
             <fieldset class="layui-elem-field layui-field-title" style="margin-top: 15px;">
               <legend>输入病人的各项指标</legend>
@@ -908,6 +1043,7 @@
           });
         });
       </script>
+  <script src="../static/js/tongue_pre/update_pre.js"></script>
     <!--肾象预测子页面js-->
     <script>
     layui.use(['form', 'layedit', 'laydate'], function(){
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"62db865c-0ead-4767-9b09-9c5c5901d1de\" name=\"Default Changelist\" comment=\"Merge branch 'master' of github.com:WeiMin-Li-visual/medicalwarehouse&#10;&#10;# Conflicts:&#10;#&#9;.idea/misc.xml&#10;#&#9;.idea/weiboanalysis.iml&#10;#&#9;.idea/workspace.xml\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/files/pulseFile.csv\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/files/pulseFile.csv\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/static/js/patient_info/common.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/static/js/patient_info/common.js\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/diseasePrediction.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/diseasePrediction.html\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"HTML File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"JupyterTrust\" id=\"1a0023ed-3ffb-4518-babb-86fdda544d31\" />\r\n  <component name=\"ProjectId\" id=\"1jGOf1xcqEsO1xyZISeyPm4Mzkm\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"DefaultHtmlFileTemplate\" value=\"HTML File\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$USER_HOME$/OneDrive/code_prediction\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\visual\\PyCharm Community Edition 2019.2.3\\pythonWorkPlace\\weiboanalysis\\static\\data\\weibo\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\visual\\PyCharm Community Edition 2019.2.3\\pythonWorkPlace\\weiboanalysis\\utils\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"medicalwarehouse\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/app.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.app\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"62db865c-0ead-4767-9b09-9c5c5901d1de\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1603427061766</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1603427061766</updated>\r\n      <workItem from=\"1604022893885\" duration=\"776000\" />\r\n      <workItem from=\"1623394639866\" duration=\"23000\" />\r\n      <workItem from=\"1623548677917\" duration=\"1054000\" />\r\n      <workItem from=\"1623575317953\" duration=\"77000\" />\r\n      <workItem from=\"1623577341534\" duration=\"117000\" />\r\n      <workItem from=\"1623727037848\" duration=\"2088000\" />\r\n      <workItem from=\"1623852502771\" duration=\"135000\" />\r\n      <workItem from=\"1624101824824\" duration=\"665000\" />\r\n      <workItem from=\"1624104135617\" duration=\"1467000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Merge branch 'master' of github.com:WeiMin-Li-visual/medicalwarehouse&#10;&#10;# Conflicts:&#10;#&#9;.idea/misc.xml&#10;#&#9;.idea/weiboanalysis.iml&#10;#&#9;.idea/workspace.xml\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Merge branch 'master' of github.com:WeiMin-Li-visual/medicalwarehouse&#10;&#10;# Conflicts:&#10;#&#9;.idea/misc.xml&#10;#&#9;.idea/weiboanalysis.iml&#10;#&#9;.idea/workspace.xml\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 823e2b66f049f975566b23bd48a01d90c495a522)
+++ b/.idea/workspace.xml	(date 1624495454440)
@@ -2,10 +2,13 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="62db865c-0ead-4767-9b09-9c5c5901d1de" name="Default Changelist" comment="Merge branch 'master' of github.com:WeiMin-Li-visual/medicalwarehouse&#10;&#10;# Conflicts:&#10;#&#9;.idea/misc.xml&#10;#&#9;.idea/weiboanalysis.iml&#10;#&#9;.idea/workspace.xml">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021_6_20_18_14__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021_6_20_18_14__Default_Changelist_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021_6_21_13_58__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021_6_21_13_58__Default_Changelist_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/app.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/files/pulseFile.csv" beforeDir="false" afterPath="$PROJECT_DIR$/files/pulseFile.csv" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/static/js/patient_info/common.js" beforeDir="false" afterPath="$PROJECT_DIR$/static/js/patient_info/common.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/templates/diseasePrediction.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/diseasePrediction.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/fileInput.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/fileInput.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -34,6 +37,14 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
     <option name="UPDATE_TYPE" value="REBASE" />
+  </component>
+  <component name="GitSEFilterConfiguration">
+    <file-type-list>
+      <filtered-out-file-type name="LOCAL_BRANCH" />
+      <filtered-out-file-type name="REMOTE_BRANCH" />
+      <filtered-out-file-type name="TAG" />
+      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
+    </file-type-list>
   </component>
   <component name="JupyterTrust" id="1a0023ed-3ffb-4518-babb-86fdda544d31" />
   <component name="ProjectId" id="1jGOf1xcqEsO1xyZISeyPm4Mzkm" />
@@ -48,7 +59,7 @@
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="WebServerToolWindowFactoryState" value="false" />
-    <property name="last_opened_file_path" value="$USER_HOME$/OneDrive/code_prediction" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
     <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
   </component>
   <component name="RecentsManager">
@@ -117,4 +128,13 @@
     <MESSAGE value="Merge branch 'master' of github.com:WeiMin-Li-visual/medicalwarehouse&#10;&#10;# Conflicts:&#10;#&#9;.idea/misc.xml&#10;#&#9;.idea/weiboanalysis.iml&#10;#&#9;.idea/workspace.xml" />
     <option name="LAST_COMMIT_MESSAGE" value="Merge branch 'master' of github.com:WeiMin-Li-visual/medicalwarehouse&#10;&#10;# Conflicts:&#10;#&#9;.idea/misc.xml&#10;#&#9;.idea/weiboanalysis.iml&#10;#&#9;.idea/workspace.xml" />
   </component>
+  <component name="XDebuggerManager">
+    <watches-manager>
+      <configuration name="PythonConfigurationType">
+        <watch expression="request.files" language="Python" />
+        <watch expression="request.form.get(&quot;a&quot;)" language="Python" />
+        <watch expression="request.files" language="Python" />
+      </configuration>
+    </watches-manager>
+  </component>
 </project>
\ No newline at end of file
Index: templates/fileInput.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\" />\r\n    <meta\r\n      name=\"viewport\"\r\n      content=\"width=device-width, initial-scale=1, maximum-scale=1\"\r\n    />\r\n    <title>数据导入</title>\r\n    <link rel=\"stylesheet\" href=\"../static/layui/css/layui.css\" media=\"all\" />\r\n    <script src=\"../static/js/jquery.js\"></script>\r\n    <style type=\"text/css\">\r\n      .file {\r\n        display: inline-block;\r\n        height: 38px;\r\n        line-height: 38px;\r\n        padding: 0 18px;\r\n        background-color: #1e9fff;\r\n        color: #fff;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        font-size: 14px;\r\n        border: none;\r\n        border-radius: 2px;\r\n        cursor: pointer;\r\n\r\n        position: relative;\r\n        overflow: hidden;\r\n        text-decoration: none;\r\n        text-indent: 0;\r\n      }\r\n      .file input {\r\n        position: absolute;\r\n        font-size: 100px;\r\n        right: 0;\r\n        top: 0;\r\n        opacity: 0;\r\n      }\r\n      .file:hover {\r\n        background: #78c3f3;\r\n        border-color: #78c3f3;\r\n        color: #004974;\r\n        text-decoration: none;\r\n      }\r\n      .hide {\r\n        display: none;\r\n      }\r\n      .constrain_width {\r\n        width: 45%;\r\n      }\r\n      .layui-form-pane .layui-form-label {\r\n        width: 130px;\r\n      }\r\n      .layui-form-pane .layui-input-block {\r\n        margin-left: 130px;\r\n      }\r\n      .file_icon:hover + .input_clear {\r\n        opacity: 1;\r\n      }\r\n      .input_clear {\r\n        position: absolute;\r\n        top: 50%;\r\n        right: 10px;\r\n        transform: translateY(-50%);\r\n        opacity: 0;\r\n        cursor: pointer;\r\n        transition: all 0.3s;\r\n      }\r\n      .input_clear:hover {\r\n        opacity: 1;\r\n      }\r\n      .uploadProgress {\r\n        width: 200px;\r\n        display: inline-block;\r\n      }\r\n      .uploadZi {\r\n        display: inline-block;\r\n        margin-bottom: 7px;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <div style=\"padding: 15px\">\r\n      <fieldset\r\n        class=\"layui-elem-field layui-field-title\"\r\n        style=\"margin-top: 50px\"\r\n      >\r\n        <legend>数据导入</legend>\r\n      </fieldset>\r\n      <form name=\"myForm\" class=\"layui-form layui-form-pane\">\r\n        <div class=\"layui-form-item constrain_width\" pane=\"\">\r\n          <label class=\"layui-form-label\">数据来源</label>\r\n          <div class=\"layui-input-block\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"data_source\"\r\n              value=\"local\"\r\n              title=\"本地\"\r\n              lay-filter=\"show\"\r\n              checked\r\n            />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"data_source\"\r\n              value=\"MySQL\"\r\n              title=\"Mysql\"\r\n              lay-filter=\"show\"\r\n            />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"data_source\"\r\n              value=\"SqlServer\"\r\n              title=\"SqlServer\"\r\n              lay-filter=\"show\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item constrain_width\" pane=\"\">\r\n          <label class=\"layui-form-label\">科室</label>\r\n          <div class=\"layui-input-block\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"dept\"\r\n              value=\"kidney\"\r\n              title=\"肾科\"\r\n              checked\r\n            />\r\n            <input type=\"radio\" name=\"dept\" value=\"liver\" title=\"肝科\" />\r\n            <input type=\"radio\" name=\"dept\" value=\"lung\" title=\"肺科\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"mysql hide\">\r\n          <div class=\"layui-inline\">\r\n            <div class=\"layui-form-item\">\r\n              <label class=\"layui-form-label\">host</label>\r\n              <div class=\"layui-input-block\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"host\"\r\n                  value=\"localhost\"\r\n                  placeholder=\"请输入\"\r\n                  class=\"layui-input\"\r\n                  lay-verify=\"host\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline\">\r\n            <div class=\"layui-form-item\">\r\n              <label class=\"layui-form-label\">port</label>\r\n              <div class=\"layui-input-block\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"port\"\r\n                  value=\"3306\"\r\n                  placeholder=\"请输入\"\r\n                  class=\"layui-input\"\r\n                  lay-verify=\"port\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline\">\r\n            <div class=\"layui-form-item\">\r\n              <label class=\"layui-form-label\">user</label>\r\n              <div class=\"layui-input-block\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"user\"\r\n                  value=\"root\"\r\n                  placeholder=\"请输入\"\r\n                  class=\"layui-input\"\r\n                  lay-verify=\"user\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div></div>\r\n          <!-- 换行用 -->\r\n          <div class=\"layui-inline\">\r\n            <div class=\"layui-form-item\">\r\n              <label class=\"layui-form-label\">password</label>\r\n              <div class=\"layui-input-block\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"passwd\"\r\n                  value=\"000000\"\r\n                  placeholder=\"请输入\"\r\n                  class=\"layui-input\"\r\n                  lay-verify=\"password\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline\">\r\n            <div class=\"layui-form-item\">\r\n              <label class=\"layui-form-label\">db</label>\r\n              <div class=\"layui-input-block\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"db\"\r\n                  value=\"medicaldb\"\r\n                  placeholder=\"请输入\"\r\n                  class=\"layui-input\"\r\n                  lay-verify=\"db\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline SqlServer\">\r\n            <div class=\"layui-form-item\">\r\n              <label class=\"layui-form-label\">charset</label>\r\n              <div class=\"layui-input-block\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"charset\"\r\n                  value=\"utf8\"\r\n                  placeholder=\"请输入\"\r\n                  class=\"layui-input\"\r\n                  lay-verify=\"charset\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <div class=\"layui-inline local\">\r\n            <label class=\"layui-form-label\">病例信息表</label>\r\n            <div class=\"layui-input-inline\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"fileName\"\r\n                id=\"selectFileName\"\r\n                autocomplete=\"off\"\r\n                placeholder=\"未选择文件\"\r\n                class=\"layui-input file_icon\"\r\n                readonly=\"readonly\"\r\n                lay-verify=\"patient_info\"\r\n              />\r\n              <i class=\"layui-icon input_clear\" data-relate-input=\"file\"\r\n                >&#x1006;</i\r\n              >\r\n              <!-- &#x1007; -->\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline mysql hide\">\r\n            <label class=\"layui-form-label\">病例信息表名</label>\r\n            <div class=\"layui-input-inline\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"patient_info_table\"\r\n                placeholder=\"请输入\"\r\n                class=\"layui-input\"\r\n                lay-verify=\"patient_table_name\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline local\">\r\n            <!--\t\t\t\t\t<input type=\"file\" name=\"pulseFile\" class=\"file\">-->\r\n            <a href=\"javascript:;\" class=\"file\"\r\n              >点击选择文件\r\n              <input\r\n                type=\"file\"\r\n                name=\"infoFile\"\r\n                id=\"selectFile\"\r\n                class=\"file\"\r\n                title=\"\"\r\n                data-name=\"file\"\r\n              />\r\n            </a>\r\n          </div>\r\n          <div class=\"layui-inline local\">\r\n            <label class=\"layui-form-label\">编码</label>\r\n            <div class=\"layui-input-block\">\r\n              <select name=\"patient_info_file_encoding\">\r\n                <option value=\"utf-8\" selected>utf-8</option>\r\n                <option value=\"utf-16 le\">utf-16 le</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <div class=\"layui-inline local\">\r\n            <label class=\"layui-form-label\">脉搏数据目录</label>\r\n            <div class=\"layui-input-inline\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"fileName\"\r\n                id=\"selectDirName\"\r\n                autocomplete=\"off\"\r\n                placeholder=\"未选择文件\"\r\n                class=\"layui-input file_icon\"\r\n                readonly=\"readonly\"\r\n                lay-verify=\"pulse_dir\"\r\n              />\r\n              <i class=\"layui-icon input_clear\" data-relate-input=\"fileDir\"\r\n                >&#x1006;</i\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline mysql hide\">\r\n            <label class=\"layui-form-label\">脉搏表命名规则</label>\r\n            <div class=\"layui-input-inline\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"pulse_table_na_rule\"\r\n                value=\"病例编号\"\r\n                class=\"layui-input\"\r\n                lay-verify=\"pulse_table\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline local\">\r\n            <!--\t\t\t\t\t<input type=\"file\" name=\"pulseFile\" class=\"file\">-->\r\n            <a href=\"javascript:;\" class=\"file\"\r\n              >点击选择目录\r\n              <input\r\n                type=\"file\"\r\n                name=\"pulseDir\"\r\n                id=\"selectDir\"\r\n                class=\"file\"\r\n                data-name=\"fileDir\"\r\n                title=\"\"\r\n                webkitdirectory\r\n              />\r\n            </a>\r\n          </div>\r\n          <div class=\"layui-inline local\">\r\n            <label class=\"layui-form-label\">编码</label>\r\n            <div class=\"layui-input-block\">\r\n              <select name=\"pulse_file_encoding\" lay-verify=\"\">\r\n                <option value=\"utf-8\">utf-8</option>\r\n                <option value=\"utf-16 le\" selected>utf-16 le</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <div class=\"layui-inline\">\r\n            <button class=\"layui-btn\" lay-submit lay-filter=\"formDemo\">\r\n              导入\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              class=\"layui-btn layui-btn-primary import_reset\"\r\n            >\r\n              重置\r\n            </button>\r\n          </div>\r\n          <div class=\"layui-inline uploadUi\">\r\n            <div class=\"layui-progress uploadProgress\" lay-filter=\"upload\">\r\n              <div class=\"layui-progress-bar\" lay-percent=\"0%\"></div>\r\n            </div>\r\n            <span class=\"uploadZi\"><i class=\"layui-icon layui-anim layui-anim-rotate layui-anim-loop\">&#xe63d;</i>上传中</span>\r\n          </div>\r\n        </div>\r\n        \r\n      </form>\r\n    </div>\r\n    <script src=\"../static/layui/layui.js\"></script>\r\n    <script src=\"../static/js/jquery.js\"></script>\r\n    <script>\r\n      //Demo\r\n      layui.use([\"form\", \"layer\", \"element\"], function () {\r\n        const form = layui.form;\r\n        const layer = layui.layer;\r\n        const element = layui.element;\r\n        //监听提交\r\n        form.on(\"radio(show)\", (data) => {\r\n          const { value } = data;\r\n          formStatu = value;\r\n          switchUi(value);\r\n        });\r\n        form.verify({\r\n          host: (value) =>\r\n            (formStatu === \"MySQL\" || formStatu === \"SqlServer\") && value.trim().length === 0 && \"请输入host\",\r\n          port: (value) =>\r\n            (formStatu === \"MySQL\" || formStatu === \"SqlServer\") && value.trim().length === 0 && \"请输入port\",\r\n          user: (value) =>\r\n            (formStatu === \"MySQL\" || formStatu === \"SqlServer\") && value.trim().length === 0 && \"请输入user\",\r\n          password: (value) =>\r\n            (formStatu === \"MySQL\" || formStatu === \"SqlServer\") &&\r\n            value.trim().length === 0 &&\r\n            \"请输入password\",\r\n          db: (value) =>\r\n            (formStatu === \"MySQL\" || formStatu === \"SqlServer\") && value.trim().length === 0 && \"请输入db\",\r\n          charset: (value) =>\r\n            (formStatu === \"MySQL\" || formStatu === \"SqlServer\") &&\r\n            value.trim().length === 0 &&\r\n            \"请输入charset\",\r\n          patient_table_name: (value) =>\r\n            (formStatu === \"MySQL\" || formStatu === \"SqlServer\") &&\r\n            value.trim().length === 0 &&\r\n            \"请输入病例信息表名\",\r\n          charset: (value) =>\r\n            (formStatu === \"MySQL\" || formStatu === \"SqlServer\") &&\r\n            value.trim().length === 0 &&\r\n            \"请输入charset\",\r\n          pulse_table: (value) =>\r\n            (formStatu === \"MySQL\" || formStatu === \"SqlServer\") &&\r\n            value.trim().length === 0 &&\r\n            \"请输入脉搏数据表名\",\r\n          pulse_dir: (value) =>\r\n            formStatu === \"local\" &&\r\n            value.trim().length === 0 &&\r\n            \"请输入脉搏数据表名\",\r\n          patient_info: (value) =>\r\n            formStatu === \"local\" &&\r\n            value.trim().length === 0 &&\r\n            \"请输入脉搏数据表名\",\r\n        });\r\n        form.on(\"submit(formDemo)\", function (data) {\r\n          const { field, form } = data;\r\n          let uploadData = new FormData();\r\n          let sign = false;\r\n          [...fileData].forEach((e) => uploadData.append(e[0], e[1]));\r\n          \r\n          for (const key in field) {\r\n            if(key === \"data_source\" && field[key] !== \"local\") {\r\n              sign = true\r\n            }\r\n            uploadData.append(key, field[key].trim());\r\n          }\r\n          if(sign) {\r\n            uploadData.delete(\"file\");\r\n            uploadData.delete(\"fileDir\");\r\n          }\r\n          uploadUi.show();\r\n          $.ajax({\r\n            url: \"/dataimport\",\r\n            type: \"POST\",\r\n            data: uploadData,\r\n            cache: false,\r\n            processData: false,\r\n            contentType: false,\r\n            success: (data) => {\r\n              form.reset();\r\n              formStatu = \"local\";\r\n              switchUi(formStatu);\r\n              clearInput(\"file\");\r\n              clearInput(\"fileDir\");\r\n              uploadUi.hide();\r\n              element.progress(\"upload\", `0%`);\r\n              layer.msg(data);\r\n            },\r\n            error: (err) => {\r\n              uploadUi.hide();\r\n              element.progress(\"upload\", `0%`);\r\n            },\r\n            xhr: function () {\r\n              myXhr = $.ajaxSettings.xhr();\r\n              if (myXhr.upload) {\r\n                myXhr.upload.addEventListener(\r\n                  \"progress\",\r\n                  function (e) {\r\n                    if (e.lengthComputable) {\r\n                      var percent = Math.floor((e.loaded / e.total) * 100);\r\n                      element.progress(\"upload\", `${percent}%`);\r\n                    }\r\n                  },\r\n                  false\r\n                );\r\n              }\r\n              return myXhr;\r\n            },\r\n          });\r\n          return false;\r\n        });\r\n      });\r\n\r\n      $(\"#selectFile\").on(\"change\", (e) => {\r\n        const { files, dataset } = e.target;\r\n        if (files.length === 0) return;\r\n        // let reader = new FileReader();\r\n        // reader.readAsText(files[0])\r\n        // reader.onload = function () {\r\n        //   console.log(reader.result.split(\"\\n\"));\r\n        // }\r\n        const { name } = dataset;\r\n        clearInput(\"file\");\r\n        addFile([...files], name);\r\n        e.target.value = \"\";\r\n      });\r\n      $(\"#selectDir\").on(\"change\", (e) => {\r\n        const { files, dataset } = e.target;\r\n        const { name } = dataset;\r\n        addFile([...files], name);\r\n        e.target.value = \"\";\r\n      });\r\n      $(\".input_clear\").on(\"click\", (e) => {\r\n        const { dataset } = e.target;\r\n        clearInput(dataset.relateInput);\r\n      });\r\n      $(\".import_reset\").on(\"click\", (e) => {\r\n        formStatu = \"local\";\r\n        clearInput(\"file\");\r\n        clearInput(\"fileDir\");\r\n        switchUi(formStatu);\r\n      });\r\n      function switchUi(value) {\r\n        switch (value) {\r\n          case \"MySQL\": {\r\n            sourceMysql.removeClass(\"hide\");\r\n            sourceLocal.addClass(\"hide\");\r\n            sourceSqlserver.removeClass(\"hide\");\r\n            break;\r\n          }\r\n          case \"local\": {\r\n            sourceMysql.addClass(\"hide\");\r\n            sourceLocal.removeClass(\"hide\");\r\n            sourceSqlserver.addClass(\"hide\");\r\n            break;\r\n          }\r\n          case \"SqlServer\": {\r\n            sourceMysql.removeClass(\"hide\");\r\n            sourceLocal.addClass(\"hide\");\r\n            sourceSqlserver.addClass(\"hide\");\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      function addFile(files, name) {\r\n        const { data, el } = fileInputName[name];\r\n        for (let i = 0; i < files.length; ++i) {\r\n          if (data.indexOf(files[i].name) === -1) {\r\n            fileData.append(name, files[i]);\r\n            data.push(files[i].name);\r\n          }\r\n        }\r\n        el.val(data.join(\";\"));\r\n      }\r\n      function clearInput(str) {\r\n        const { data, el } = fileInputName[str];\r\n        fileData.delete(str);\r\n        data.length = 0;\r\n        el.val(\"\");\r\n      }\r\n      const sourceMysql = $(\".mysql\");\r\n      const sourceLocal = $(\".local\");\r\n      const sourceSqlserver = $(\".SqlServer\");\r\n      const uploadUi = $(\".uploadUi\");\r\n      uploadUi.hide();\r\n      let formStatu = \"local\";\r\n      let fileData = new FormData();\r\n      let fileInputName = {\r\n        file: {\r\n          data: [],\r\n          el: $(\"#selectFileName\"),\r\n        },\r\n        fileDir: {\r\n          data: [],\r\n          el: $(\"#selectDirName\"),\r\n        },\r\n      };\r\n    </script>\r\n  </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/fileInput.html b/templates/fileInput.html
--- a/templates/fileInput.html	(revision 823e2b66f049f975566b23bd48a01d90c495a522)
+++ b/templates/fileInput.html	(date 1624451946299)
@@ -351,10 +351,14 @@
             <div class="layui-progress uploadProgress" lay-filter="upload">
               <div class="layui-progress-bar" lay-percent="0%"></div>
             </div>
-            <span class="uploadZi"><i class="layui-icon layui-anim layui-anim-rotate layui-anim-loop">&#xe63d;</i>上传中</span>
+            <span class="uploadZi"
+              ><i
+                class="layui-icon layui-anim layui-anim-rotate layui-anim-loop"
+                >&#xe63d;</i
+              >上传中</span
+            >
           </div>
         </div>
-        
       </form>
     </div>
     <script src="../static/layui/layui.js"></script>
@@ -373,17 +377,25 @@
         });
         form.verify({
           host: (value) =>
-            (formStatu === "MySQL" || formStatu === "SqlServer") && value.trim().length === 0 && "请输入host",
+            (formStatu === "MySQL" || formStatu === "SqlServer") &&
+            value.trim().length === 0 &&
+            "请输入host",
           port: (value) =>
-            (formStatu === "MySQL" || formStatu === "SqlServer") && value.trim().length === 0 && "请输入port",
+            (formStatu === "MySQL" || formStatu === "SqlServer") &&
+            value.trim().length === 0 &&
+            "请输入port",
           user: (value) =>
-            (formStatu === "MySQL" || formStatu === "SqlServer") && value.trim().length === 0 && "请输入user",
+            (formStatu === "MySQL" || formStatu === "SqlServer") &&
+            value.trim().length === 0 &&
+            "请输入user",
           password: (value) =>
             (formStatu === "MySQL" || formStatu === "SqlServer") &&
             value.trim().length === 0 &&
             "请输入password",
           db: (value) =>
-            (formStatu === "MySQL" || formStatu === "SqlServer") && value.trim().length === 0 && "请输入db",
+            (formStatu === "MySQL" || formStatu === "SqlServer") &&
+            value.trim().length === 0 &&
+            "请输入db",
           charset: (value) =>
             (formStatu === "MySQL" || formStatu === "SqlServer") &&
             value.trim().length === 0 &&
@@ -414,18 +426,17 @@
           let uploadData = new FormData();
           let sign = false;
           [...fileData].forEach((e) => uploadData.append(e[0], e[1]));
-          
+
           for (const key in field) {
-            if(key === "data_source" && field[key] !== "local") {
-              sign = true
+            if (key === "data_source" && field[key] !== "local") {
+              sign = true;
             }
             uploadData.append(key, field[key].trim());
           }
-          if(sign) {
+          if (sign) {
             uploadData.delete("file");
             uploadData.delete("fileDir");
           }
-          uploadUi.show();
           $.ajax({
             url: "/dataimport",
             type: "POST",
@@ -439,15 +450,12 @@
               switchUi(formStatu);
               clearInput("file");
               clearInput("fileDir");
-              uploadUi.hide();
-              element.progress("upload", `0%`);
               layer.msg(data);
             },
             error: (err) => {
-              uploadUi.hide();
-              element.progress("upload", `0%`);
             },
             xhr: function () {
+              uploadUi.show();
               myXhr = $.ajaxSettings.xhr();
               if (myXhr.upload) {
                 myXhr.upload.addEventListener(
@@ -460,6 +468,11 @@
                   },
                   false
                 );
+
+                myXhr.upload.addEventListener("load", () => {
+                  uploadUi.hide();
+                  element.progress("upload", `0%`);
+                });
               }
               return myXhr;
             },
