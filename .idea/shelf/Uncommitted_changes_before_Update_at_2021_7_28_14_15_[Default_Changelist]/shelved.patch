Index: static/js/tongue_pre/update_pre.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function showProgress(percent, filter, element) {\r\n  element.progress(filter, `${percent}%`);\r\n}\r\nlayui.use(\"element\", function () {\r\n  const element = layui.element;\r\n  $(\".imgFile\").on(\"change\", (e) => {\r\n    const { files } = e.target;\r\n    let reads = new FileReader();\r\n    imgData = new FormData();\r\n    reads.readAsDataURL(files[0]);\r\n    imgData.append(\"tongueImg\", files[0]);\r\n    $imgProgress.show();\r\n    $showImg.hide();\r\n    reads.onload = (e) => {\r\n      $imgProgress.hide();\r\n      $showImg.show();\r\n      showProgress(0, \"imgUpload\", element);\r\n      $showImg.attr(\"src\", e.target.result);\r\n    };\r\n    reads.onprogress = (e) => {\r\n      showProgress(Math.ceil((e.loaded / e.total) * 100), \"imgUpload\", element);\r\n    };\r\n  });\r\n});\r\n\r\nlayui.use([\"form\", \"element\"], function () {\r\n  const form = layui.form;\r\n  const layer = layui.form;\r\n  const element = layui.element;\r\n  form.on(\"submit(doTonguePre)\", function () {\r\n    $.ajax({\r\n      type: \"POST\",\r\n      url: \"http://127.0.0.1:5000/tongue_pre\",\r\n      data: imgData,\r\n      cache: false,\r\n      processData: false,\r\n      contentType: false,\r\n      success: (res) => {\r\n        $uploadUi.hide();\r\n        res = JSON.parse(res);\r\n        form.val(\"tonguePrediction\", {\r\n          tongueColor: res.tongue_color,\r\n          coatingColor: res.coated_tongue_color,\r\n        });\r\n      },\r\n      xhr: function () {\r\n        $uploadUi.show();\r\n        myXhr = $.ajaxSettings.xhr();\r\n        if (myXhr.upload) {\r\n          myXhr.upload.addEventListener(\r\n            \"progress\",\r\n            function (e) {\r\n              if (e.lengthComputable) {\r\n                showProgress(\r\n                  Math.floor((e.loaded / e.total) * 100),\r\n                  \"upload\",\r\n                  element\r\n                );\r\n              }\r\n            },\r\n            false\r\n          );\r\n          myXhr.upload.addEventListener(\"load\", () => {\r\n            $uploadUi.hide();\r\n            showProgress(0, \"upload\", element);\r\n          });\r\n        }\r\n        return myXhr;\r\n      },\r\n    });\r\n    return false;\r\n  });\r\n});\r\n\r\nfunction addImg({\r\n  patient_info,\r\n  encode,\r\n  true_ton_color,\r\n  pre_ton_color,\r\n  true_coating_color,\r\n  pre_coating_color,\r\n}) {\r\n  const isTonCorrect = true_ton_color === pre_ton_color;\r\n  const isCoaCorrect = true_coating_color === pre_coating_color;\r\n  return [\r\n    $(`\r\n  <div class=\"component\">\r\n    <div class=\"upper\">\r\n    <img src=data:;base64,${encode}>\r\n        \r\n    </div>\r\n    <div class=\"lower\">\r\n        <p class=${\r\n          isTonCorrect ? \"green\" : \"red\"\r\n        }>舌色(真实):<span>${true_ton_color}</span>&nbsp;&nbsp;&nbsp;舌色(预测):<span>${pre_ton_color}</span></p>\r\n        <p class=${\r\n          isCoaCorrect ? \"green\" : \"red\"\r\n        }>苔色(真实):<span>${true_coating_color}</span>&nbsp;&nbsp;&nbsp;苔色(预测):<span>${pre_coating_color}</span></p>\r\n    </div>\r\n  </div> \r\n    `),\r\n    isTonCorrect,\r\n    isCoaCorrect,\r\n    patient_info,\r\n  ];\r\n}\r\n\r\nfunction bindShowPatientInfo(el, info) {\r\n  layui.use([\"table\", \"layer\"], function () {\r\n    const table = layui.table;\r\n    const layer = layui.layer;\r\n    el.on(\"click\", () => {\r\n      $(\".patient_detail\").empty();\r\n      let cols = [];\r\n      let dealedInfo = info;\r\n      if (Object.keys(dealedInfo).length !== 0) {\r\n        $patient_detail.append($(`<table class=\"patient_info\"></table>`));\r\n        switch (info.id?.[0]) {\r\n          case \"l\": {\r\n            dealLungData(dealedInfo);\r\n            cols = lungCols;\r\n            break;\r\n          }\r\n          case \"k\": {\r\n            dealKindeyData(dealedInfo);\r\n            cols = kidneyCols;\r\n            break;\r\n          }\r\n          default: {\r\n            dealLiverData(dealedInfo);\r\n            cols = liverCols;\r\n            break;\r\n          }\r\n        }\r\n        setTimeout(() => {\r\n          //使用计时器，防止表格渲染出现格式问题\r\n          //根据data渲染病人的数据\r\n          dealedInfo &&\r\n            table.render({\r\n              elem: \".patient_info\", // 定位表格ID\r\n              title: \"详细信息\",\r\n              cols,\r\n              data: [dealedInfo],\r\n            });\r\n        }, 0);\r\n      } else {\r\n        $(\".patient_detail\").empty();\r\n        $patient_detail.append($(`<div class=\"no_data\">数据暂无</div>`));\r\n      }\r\n      layer.open({\r\n        type: 1,\r\n        shadeClose: true,\r\n        resize: false,\r\n        area: \"1000px\",\r\n        title: \"详细信息\",\r\n        content: $(\".patient_detail\"),\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction dealLungData(e) {\r\n  e.sex = e.sex === \"2\" ? \"女\" : \"男\";\r\n  e.Lung_qi_deficiency = e.Lung_qi_deficiency === \"1\" ? \"是\" : \"否\";\r\n  e.spleen_qi_deficiency = e.spleen_qi_deficiency === \"1\" ? \"是\" : \"否\";\r\n  e.kidney_qi_deficiency = e.kidney_qi_deficiency === \"1\" ? \"是\" : \"否\";\r\n  e.PEF = e.PEF === \"None\" ? \"无数据\" : e.PEF;\r\n}\r\n\r\nfunction dealLiverData(e) {\r\n  e.sex = e.sex === \"1\" ? \"女\" : \"男\";\r\n  e.symptoms_type = e.symptoms_type === \"1\" ? \"肝胆湿热症\" : \"肝郁脾虚症\";\r\n}\r\n\r\nfunction dealKindeyData(e) {\r\n  e.sex = e.sex === \"2\" ? \"女\" : \"男\";\r\n  e.symptoms_type = e.symptoms_type === \"1\" ? \"肾阳虚\" : \"肾阴虚\";\r\n}\r\n\r\nlayui.use([\"form\", \"layer\"], function () {\r\n  const form = layui.form;\r\n  const layer = layui.layer;\r\n  form.on(\"select(tonBatchSelect)\", function (data) {\r\n    const { value } = data;\r\n    let predictNum = parseInt(value, 10);\r\n    layer.load(2);\r\n    $.ajax({\r\n      type: \"POST\", //请求的方法\r\n      url: \"http://127.0.0.1:5000/tongue_batch_pre\",\r\n      data: {\r\n        num: predictNum,\r\n      },\r\n      success: (data) => {\r\n        predictData = [];\r\n        $batch_show.empty();\r\n        data = JSON.parse(data);\r\n        layer.closeAll();\r\n        const { tongueData, tongue_color_accuracy, moss_color_accuracy } = data;\r\n        form.val(\"tonBatchPre\", {\r\n          ton_acu: tongue_color_accuracy,\r\n          moss_acu: moss_color_accuracy,\r\n        });\r\n        for (let i = 0; i < tongueData.length; ++i) {\r\n          const [el, isTon, isCoa, patient_info] = addImg(tongueData[i]);\r\n          $batch_show.append(el);\r\n          bindShowPatientInfo(el, patient_info);\r\n          predictData.push([el, isTon, isCoa, patient_info]);\r\n        }\r\n      },\r\n    });\r\n  });\r\n});\r\n\r\nfunction classify(idx) {\r\n  $(\".component\").detach();\r\n  const $correct = $(`<div class=\"correct\"></div>`);\r\n  const $error = $(`<div class=\"error\"></div>`);\r\n  for (let i = 0; i < predictData.length; ++i) {\r\n    const [el, isTon, isCoa] = predictData[i];\r\n    if(idx === 2) $batch_show.append(el);\r\n    else if (idx === 0 ? isTon : isCoa) {\r\n      $correct.append(el);\r\n    } else {\r\n      $error.append(el);\r\n    }\r\n  }\r\n  if(idx !== 2) {\r\n    $batch_show.append($correct).append($error);\r\n  }\r\n}\r\n\r\n$(\".accordTonColor\").on(\"click\", () => {\r\n  classify(0);\r\n});\r\n\r\n$(\".recovery\").on(\"click\", () => {\r\n  classify(2);\r\n});\r\n\r\n$(\".accordCoaColor\").on(\"click\", () => {\r\n  classify(1);\r\n});\r\n\r\nconst $showImg = $(\".update_show img\");\r\nconst $batch_show = $(\".batch_show\");\r\nconst $uploadUi = $(\".uploadUi\");\r\nconst $imgProgress = $(\".update_show .imgProgress\");\r\nconst $patient_detail = $(\".patient_detail\");\r\nconst $recovery = $(\".recovery\");\r\nlet predictData = [];\r\n$uploadUi.hide();\r\nlet imgData = new FormData();\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/js/tongue_pre/update_pre.js b/static/js/tongue_pre/update_pre.js
--- a/static/js/tongue_pre/update_pre.js	(revision f0d41de8d63066627a6a3a2e08ceb89e36ea50a9)
+++ b/static/js/tongue_pre/update_pre.js	(date 1627452373729)
@@ -82,6 +82,8 @@
 }) {
   const isTonCorrect = true_ton_color === pre_ton_color;
   const isCoaCorrect = true_coating_color === pre_coating_color;
+  // <img src=data:;base64,${encode}>
+  // <img src=${"C:/Users/Lenovo/Desktop/前端/京东商城/img/1.jpg"}>
   return [
     $(`
   <div class="component">
