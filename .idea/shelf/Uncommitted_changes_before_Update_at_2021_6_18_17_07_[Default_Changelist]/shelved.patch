Index: app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># -*- coding:utf-8 -*-\r\nfrom flask import Flask, render_template, request\r\nimport pymysql\r\nimport pandas as pd\r\nimport json\r\nfrom utils import tool\r\nimport os\r\nfrom algorithm import predict\r\n\r\n# 连接数据库\r\ntry:\r\n    db = pymysql.connect(\r\n             host='58.199.160.140',\r\n             port=3306,\r\n             user='root',\r\n             passwd='000000',\r\n             db ='medical_dw',\r\n             charset='utf8'\r\n             )\r\nexcept:\r\n    print('数据库连接失败！')\r\n    exit(0)\r\n\r\n# 使用cursor()方法创建一个游标对象cursor，用于执行SQL语句\r\ncursor = db.cursor()\r\n\r\n# # 关闭数据库连接\r\n# db.close()\r\n\r\n\r\napp = Flask(__name__)\r\napp.secret_key = '000000'\r\n\r\n\r\n\r\n@app.route('/')\r\ndef hello_world():\r\n    return render_template('index.html')\r\n\r\n# 数据统计\r\n@app.route('/datastatistic', methods=[\"GET\", \"POST\"])\r\ndef data_statistic():\r\n    if request.method == \"GET\":\r\n        # 从数据库获取病人信息表\r\n        try:\r\n            cursor.execute(\"SELECT sex, age, serum_creatinine, eGFR, symptoms_type FROM dwd_patient_info;\")\r\n        except:\r\n            print('从服务器获取数据失败')\r\n            return 0\r\n        query_result = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:,0].tolist()\r\n        pd_patient_info = pd.DataFrame(list(query_result), columns=col_names)\r\n\r\n        data = tool.get_statistic_info(pd_patient_info)\r\n\r\n        data_json = json.dumps(data)\r\n        # return data_json\r\n        return render_template('datastatistic.html', data_json=data_json)\r\n    elif request.method == \"POST\":\r\n        gender = request.form.get('gender')\r\n        min_age = request.form.get('min_age')\r\n        max_age = request.form.get('max_age')\r\n        min_sc_value = request.form.get('min_sc_value')\r\n        max_sc_value = request.form.get('max_sc_value')\r\n        min_eGFR = request.form.get('min_eGFR')\r\n        max_eGFR = request.form.get('max_eGFR')\r\n        symptoms_type = request.form.get('symptoms_type')\r\n        # print(gender, min_age, max_age, min_sc_value, max_sc_value, min_eGFR, max_eGFR)\r\n\r\n        sql = \"SELECT sex, age, serum_creatinine, eGFR, symptoms_type FROM dwd_patient_info WHERE id IS NOT NULL\"\r\n        t = [None, '', 'all']\r\n        if gender in ['男', '女']:\r\n            sql = sql + \" AND sex=\" + ('1' if gender=='男' else '2')\r\n        if min_age not in t:\r\n            sql = sql + \" AND age>=\" + str(min_age)\r\n        if max_age not in t:\r\n            sql = sql + \" AND age<=\" + str(max_age)\r\n        if min_sc_value not in t:\r\n            sql = sql + \" AND serum_creatinine>=\" + str(min_sc_value)\r\n        if max_sc_value not in t:\r\n            sql = sql + \" AND serum_creatinine<=\" + str(max_sc_value)\r\n        if min_eGFR not in t:\r\n            sql = sql + \" AND eGFR>=\" + str(min_eGFR)\r\n        if min_sc_value not in t:\r\n            sql = sql + \" AND eGFR>=\" + str(max_eGFR)\r\n        if symptoms_type in ['肾阳虚', '肾阴虚']:\r\n            sql = sql + \" AND symptoms_type=\" + ('1' if symptoms_type=='肾阳虚' else '2')\r\n        # print(sql)\r\n\r\n        # 从数据库获取病人信息表\r\n        try:\r\n            cursor.execute(sql)\r\n        except:\r\n            print('从服务器获取数据失败')\r\n            return 0\r\n        query_result = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:, 0].tolist()\r\n        pd_patient_info = pd.DataFrame(list(query_result), columns=col_names)\r\n        print(pd_patient_info)\r\n\r\n        data = tool.get_statistic_info(pd_patient_info)\r\n\r\n        data_json = json.dumps(data)\r\n        return data_json\r\n        # return render_template('datastatistic.html', data_json=data_json)\r\n\r\n\r\n@app.route('/statistic_detail',methods=['GET', 'POST'])\r\ndef statistic_detail():\r\n    if request.method == \"POST\":\r\n        gender = request.form.get('gender')\r\n        min_age = request.form.get('min_age')\r\n        max_age = request.form.get('max_age')\r\n        min_sc_value = request.form.get('min_sc_value')\r\n        max_sc_value = request.form.get('max_sc_value')\r\n        min_eGFR = request.form.get('min_eGFR')\r\n        max_eGFR = request.form.get('max_eGFR')\r\n        symptoms_type = request.form.get('symptoms_type')\r\n        print(gender, symptoms_type, min_age, max_age, min_sc_value, max_sc_value, min_eGFR, max_eGFR)\r\n\r\n        sql = \"SELECT sex, age, serum_creatinine, eGFR, symptoms_type FROM dwd_patient_info WHERE id IS NOT NULL\"\r\n        t = [None, '', 'all']\r\n        if gender not in t:\r\n            sql = sql + \" AND sex=\" + str(gender)\r\n        if min_age not in t:\r\n            sql = sql + \" AND age>=\" + str(min_age)\r\n        if max_age not in t:\r\n            sql = sql + \" AND age<=\" + str(max_age)\r\n        if min_sc_value not in t:\r\n            sql = sql + \" AND serum_creatinine>=\" + str(min_sc_value)\r\n        if max_sc_value not in t:\r\n            sql = sql + \" AND serum_creatinine<=\" + str(max_sc_value)\r\n        if min_eGFR not in t:\r\n            sql = sql + \" AND eGFR>=\" + str(min_eGFR)\r\n        if min_sc_value not in t:\r\n            sql = sql + \" AND eGFR>=\" + str(max_eGFR)\r\n        if symptoms_type not in t:\r\n            sql = sql + \" AND symptoms_type=\" + str(symptoms_type)\r\n        # print(sql)\r\n\r\n        # 从数据库获取病人信息表\r\n        try:\r\n            cursor.execute(sql)\r\n        except:\r\n            print('从服务器获取数据失败')\r\n            return 0\r\n        query_result = cursor.fetchall()\r\n        col_names = pd.DataFrame(list(cursor.description)).iloc[:, 0].tolist()\r\n        pd_patient_info = pd.DataFrame(list(query_result), columns=col_names)\r\n        print(pd_patient_info)\r\n\r\n        data = tool.get_statistic_info(pd_patient_info)\r\n\r\n        data_json = json.dumps(data)\r\n        return data_json\r\n\r\n    elif request.method == \"GET\":\r\n        return render_template('statistic_detail.html',data_json=0)\r\n\r\n# 病人信息展示页面\r\n@app.route('/patient_info_show')\r\ndef patient_info_show():\r\n    return render_template('patient_info.html',page_data=json.dumps([]))\r\n\r\n\r\n@app.route('/patient_info_by_condition',methods=['POST'])\r\ndef patient_info_by_condition():\r\n    page = request.form.get('page')  # 页数\r\n    limit = request.form.get('limit')  # 每页显示的数量\r\n    if page is None:\r\n        page=1\r\n    if limit is None:\r\n        limit=1\r\n    id = request.form.get('id')  # 编号\r\n    sex = request.form.get('sex')  # 性别\r\n    age = json.loads(request.form.get('age'))  # 年龄\r\n    serum_creatinine = json.loads(request.form.get('serum_creatinine'))  # 血肌酐\r\n    eGFR = json.loads(request.form.get('eGFR'))\r\n    symptoms = request.form.get('symptoms')  # 症型(1=肾阳虚，2=肾阴虚)\r\n    sql = \"select * from dwd_kidney_info where 1=1 \"\r\n    if id!=\"\":\r\n        sql+=\"and id='\" + str(id) + \"'\"\r\n    if sex!=\"\":\r\n        sql += \"and sex='\" + str(sex) + \"'\"\r\n    if age[0]!=\"\" :\r\n        sql += \"and age>='\" + str(age[0]) + \"'\"\r\n    if age[1]!=\"\" :\r\n        sql += \"and age<='\" +  str(age[1]) + \"'\"\r\n    if serum_creatinine[0]!=\"\":\r\n        sql += \"and serum_creatinine>='\" + str(serum_creatinine[0]) + \"'\"\r\n    if serum_creatinine[1]!=\"\":\r\n        sql += \"and serum_creatinine<='\" +  str(serum_creatinine[1]) + \"'\"\r\n    if eGFR[0]!=\"\":\r\n        sql += \"and eGFR>='\" + str(eGFR[0]) + \"'\"\r\n    if eGFR[1]!=\"\":\r\n        sql += \"and eGFR<='\" +  str(eGFR[1]) + \"'\"\r\n    if symptoms!=\"\":\r\n        sql += \"and symptoms_type='\" + str(symptoms) + \"'\"\r\n    offset = (int(page) - 1) * int(limit)  # 起始行\r\n    cursor.execute(sql)  # 获得所有符合条件的数据\r\n    totalQueryData = cursor.fetchall()\r\n    sql+=\"limit \"+str(offset)+','+str(limit)\r\n    # sql_total_count = \"select count(*) from dwd_patient_info\"  # 总的记录数\r\n    # cursor.execute(sql_total_count)  # 执行sql语句\r\n    # patient_total_count = cursor.fetchall()  # 取数据\r\n    cursor.execute(sql)\r\n    data = cursor.fetchall()\r\n    json_data = {}\r\n    result_data = []\r\n    sql_COLUMN_NAME = \"select COLUMN_NAME from INFORMATION_SCHEMA.Columns where table_name = 'dwd_kidney_info' and \" \\\r\n                      \"table_schema = 'medical_dw' ORDER BY ordinal_position\"\r\n    cursor.execute(sql_COLUMN_NAME)  \r\n    column_names = cursor.fetchall()  # 获取列名字数据\r\n    for result in data:\r\n        one_person = {}\r\n        for i in range(len(column_names)):\r\n            one_person[column_names[i][0]] = str(result[i])\r\n        result_data.append(one_person)\r\n        \r\n    json_data[\"code\"] = str(0)\r\n    json_data['total'] = len(totalQueryData)\r\n    json_data['data'] = result_data\r\n    json_data = json.dumps(json_data, ensure_ascii=False)\r\n    return json_data\r\n\r\n\r\n@app.route('/disease_prediction', methods=[\"GET\", \"POST\"])\r\ndef disease_prediction():\r\n    if request.method == \"GET\":\r\n        formData={'sex': '男', 'userage': '', 'stage': '', 'bloodCreatinine': '', 'egfr': '', 'fileName': '', 'pulseType': ''}\r\n        newData = json.dumps(formData)  # json.dumps封装\r\n        return render_template('diseasePrediction.html', newData=newData)\r\n    if request.method == \"POST\":\r\n        #获取前端请求的表单数据\r\n        formData = request.form.to_dict()\r\n        # 获取pulseFile文件对象\r\n        pulseFile = request.files.get('pulseFile')\r\n        # 保存到服务器\r\n        # save方法传完整的路径和文件名\r\n        # pulseFile.save(os.path.join(UPLOAD_PATH,pulseFile.filename))\r\n        # 上行可以进行优化,下行是对pulseFile文件名进行包装，保证文件名更安全。\r\n        filename = \"pulseFile.csv\"\r\n        pulseFile.save(os.path.join(\"./files/\", filename))\r\n        #print(pulseFile)\r\n\r\n        filename_in = './files/pulseFile.csv'\r\n        #filename_out = './files/pulseFileUTF.csv'\r\n\r\n        # 输入文件的编码类型\r\n        #encode_in = 'utf-16 le'\r\n\r\n        # 输出文件的编码类型\r\n        # encode_out = 'utf-8'\r\n        #\r\n        # with codecs.open(filename=filename_in, mode='r', encoding=encode_in) as fi:\r\n        #     data = fi.read()\r\n        #     with open(filename_out, mode='w', encoding=encode_out) as fo:\r\n        #         fo.write(data)\r\n        #         fo.close()\r\n        #输入表维度大小\r\n        rows=2560\r\n        cols=57\r\n        data = pd.read_csv(filename_in, encoding=\"utf-8\", header=None, nrows=rows, usecols=[i for i in range(cols)])\r\n        # 调用模型计算脉搏类型预测结果\r\n        result=predict.pulsePrediction(data.values)\r\n        #print(data.dropna(axis=1).values)\r\n        #print(data)\r\n        formData['pulseType'] = result\r\n        formData['fileName'] = ''\r\n        # print(formData)\r\n        newData = json.dumps(formData)  # json.dumps封装\r\n        #print(newData)\r\n        return render_template('diseasePrediction.html', newData=newData)\r\n    \r\n    \r\n#用户通道数量      \r\n@app.route('/find_channelNumber',methods=['GET','POST'])\r\ndef find_channelNumber():\r\n    id = request.form.get('id')  # 用户id\r\n    sql = \"select count(*) from information_schema.COLUMNS where TABLE_SCHEMA='medical_dw' and table_name='ods_kidney_pulse_\" + str(\r\n        id) + \"'\"\r\n    cursor.execute(sql)  # 执行sql语句\r\n    res = cursor.fetchall()  # 取数据\r\n    json_data={}\r\n    json_data['channelNumber'] = res[0][0]\r\n    return json.dumps(json_data)\r\n\r\n\r\n#根据id及通道编号获取用户通道数据\r\n@app.route('/channel_data',methods=['GET','POST'])\r\ndef channel_data():\r\n    id = request.form.get('id')  # 用户id\r\n    num = request.form.get('num')  # 通道编号\r\n    num=int(num)-1\r\n    sql = \"select `\" + str(num) + \"` from medical_dw.ods_kidney_pulse_\" + str(id)\r\n    cursor.execute(sql)  # 执行sql语句\r\n    res = cursor.fetchall()  # 取数据\r\n    json_data = {}\r\n    channel_data = []\r\n    for i in res:\r\n        channel_data.append(round(i[0],5))\r\n    json_data[\"data\"] = channel_data\r\n    return json.dumps(json_data)\r\n    \r\n    \r\n#查询肺病人的信息\r\n@app.route('/lung_patient_info',methods=['POST'])\r\ndef lung_patient_info():\r\n    page = request.form.get('page')  # 页数\r\n    limit = request.form.get('limit')  # 每页显示的数量\r\n    if page is None or page==\"\":\r\n        page=1\r\n    if limit is None or limit==\"\":\r\n        limit=10\r\n    id = request.form.get('id')  # 编号\r\n    sex = request.form.get('sex')  # 性别\r\n    age = json.loads(request.form.get('age'))  # 年龄\r\n    wm_diagnosis = request.form.get('wm_diagnosis')  # 西医诊断\r\n    fei_qi_xu = request.form.get('fei_qi_xu')  # 肺气虚\r\n    pi_qi_xu = request.form.get('wm_diagnosis')  # 脾气虚\r\n    sheng_qi_xu = request.form.get('sheng_qi_xu')  # 肾气虚\r\n    FEV1 = json.loads(request.form.get('FEV1'))  # 年龄\r\n    FVC = json.loads(request.form.get('FVC'))  # 年龄\r\n    FEV11 = json.loads(request.form.get('FEV1%'))  # 年龄\r\n    FEV2 = json.loads(request.form.get('FEV1/FVC'))  # FEV1 / FVC改值\r\n    PEF = json.loads(request.form.get('PEF'))\r\n    tongue = request.form.get('tongue')  # 舌象\r\n    pulse = request.form.get('pulse')  # 脉象\r\n    sql = \"select * from dwd_lung_info where 1=1 \"\r\n    print(sql)\r\n    if id != \"\":\r\n        sql += \"and id='\" + str(id) + \"'\"\r\n    if sex != \"\":\r\n        sql += \"and sex='\" + str(sex) + \"'\"\r\n    if age != \"\" and age[0] != \"\":\r\n        sql += \"and age>='\" + str(age[0]) + \"'\"\r\n    if age != \"\" and age[1] != \"\":\r\n        sql += \"and age<='\" + str(age[1]) + \"'\"\r\n    if wm_diagnosis != \"\":\r\n        sql += \"and wm_diagnosis like '\" + \"%\" + str(wm_diagnosis) + \"%\" + \"'\"\r\n    if fei_qi_xu != \"\":\r\n        sql += \"and Lung_qi_deficiency='\" + str(fei_qi_xu) + \"'\"\r\n    if pi_qi_xu != \"\":\r\n        sql += \"and spleen_qi_deficiency='\" + str(pi_qi_xu) + \"'\"\r\n    if sheng_qi_xu != \"\":\r\n        sql += \"and kidney_qi_deficiency='\" + str(sheng_qi_xu) + \"'\"\r\n    if FEV1 != \"\" and FEV1[0] != \"\":\r\n        sql += \"and FEV1>='\" + str(FEV1[0]) + \"'\"\r\n    if FEV1 != \"\" and FEV1[1] != \"\":\r\n        sql += \"and FEV1<='\" + str(FEV1[1]) + \"'\"\r\n    if FVC != \"\" and FVC[0] != \"\":\r\n        sql += \"and FVC>='\" + str(FVC[0]) + \"'\"\r\n    if FVC != \"\" and FVC[1] != \"\":\r\n        sql += \"and FVC<='\" + str(FVC[1]) + \"'\"\r\n    if FEV11 != \"\" and FEV11[0] != \"\":\r\n        sql += \"and \\'FEV1%\\'>='\" + str(FEV11[0]) + \"'\"\r\n    if FEV11 != \"\" and FEV11[1] != \"\":\r\n        sql += \"and \\'FEV1%\\'<='\" + str(FEV11[1]) + \"'\"\r\n    if FEV2 != \"\" and FEV2[0] != \"\":\r\n        sql += \"and \\'FEV1/FVC>=\\''\" + str(FEV2[0]) + \"'\"\r\n    if FEV2 != \"\" and FEV2[1] != \"\":\r\n        sql += \"and \\'FEV1/FVC<=\\''\" + str(FEV2[1]) + \"'\"\r\n    if PEF != \"\" and PEF[0] != \"\":\r\n        sql += \"and PEF>='\" + str(PEF[0]) + \"'\"\r\n    if PEF != \"\" and PEF[1] != \"\":\r\n        sql += \"and PEF<='\" + str(PEF[1]) + \"'\"\r\n    if tongue != \"\":\r\n        sql += \"and tongue like '\" + \"%\" + str(tongue) + \"%\" + \"'\"\r\n    if pulse != \"\":\r\n        sql += \"and pulse like '\" + \"%\" + str(pulse) + \"%\" + \"'\"\r\n    offset = (int(page) - 1) * int(limit)  # 起始行\r\n    sql += \"limit \" + str(offset) + ',' + str(limit)\r\n    print(sql)\r\n    cursor.execute(sql)  # 执行sql语句\r\n    data = cursor.fetchall()  # 获取数据\r\n    json_data = {}\r\n    result_data = []\r\n\r\n    sql_COLUMN_NAME = \"select COLUMN_NAME from INFORMATION_SCHEMA.Columns where table_name = 'dwd_lung_info' and \" \\\r\n                      \"table_schema = 'medical_dw' ORDER BY ordinal_position\"\r\n    cursor.execute(sql_COLUMN_NAME)  \r\n    column_names = cursor.fetchall()  # 获取列名字数据\r\n\r\n    for result in data:\r\n        one_person = {}\r\n        for i in range(len(column_names)):\r\n            one_person[column_names[i][0]] = str(result[i])\r\n        result_data.append(one_person)\r\n    json_data['data'] = result_data\r\n    json_data = json.dumps(json_data, ensure_ascii=False)\r\n    return json_data\r\n    \r\n    \r\n@app.route('/liver_patient_info',methods=['POST'])\r\ndef liver_patient_info():\r\n    page = request.form.get('page')  # 页数\r\n    limit = request.form.get('limit')  # 每页显示的数量\r\n    if page is None or page == \"\":\r\n        page = 1\r\n    if limit is None or limit == \"\":\r\n        limit = 10\r\n    id = request.form.get('id')  # 编号\r\n    sex = request.form.get('sex')  # 性别\r\n    age = json.loads(request.form.get('age'))  # 年龄\r\n    symptoms_type = request.form.get('symptoms_type')#症型\r\n    ALT = json.loads(request.form.get('ALT'))\r\n    tongue = request.form.get('tongue')  # 舌象\r\n    pulse = request.form.get('pulse')  # 脉象\r\n    sql = \"select * from dwd_liver_info where 1=1 \"\r\n    if id != \"\":\r\n        sql += \"and id='\" + str(id) + \"'\"\r\n    if sex != \"\":\r\n        sql += \"and sex='\" + str(sex) + \"'\"\r\n    if age != \"\" and age[0] != \"\":\r\n        sql += \"and age>'\" + str(age[0]) + \"'\"\r\n    if age != \"\" and age[1] != \"\":\r\n        sql += \"and age<'\" + str(age[1]) + \"'\"\r\n    if ALT != \"\" and ALT[0] != \"\":\r\n        sql += \"and ALT>'\" + str(ALT[0]) + \"'\"\r\n    if ALT != \"\" and ALT[1] != \"\":\r\n        sql += \"and ALT<'\" + str(ALT[1]) + \"'\"\r\n    if symptoms_type != \"\":\r\n        sql += \"and symptoms_type='\" + str(symptoms_type) + \"'\"\r\n    if tongue != \"\":\r\n        sql += \"and tongue like '\" + \"%\" + str(tongue) + \"%\" + \"'\"\r\n    if pulse != \"\":\r\n        sql += \"and pulse like '\" + \"%\" + str(pulse) + \"%\" + \"'\"\r\n    offset = (int(page) - 1) * int(limit)  # 起始行\r\n    sql += \"limit \" + str(offset) + ',' + str(limit)\r\n    print(sql)\r\n    cursor.execute(sql)  # 执行sql语句\r\n    data = cursor.fetchall()  # 获取数据\r\n    json_data = {}\r\n    result_data = []\r\n    sql_COLUMN_NAME = \"select COLUMN_NAME from INFORMATION_SCHEMA.Columns where table_name = 'dwd_liver_info' and \" \\\r\n                      \"table_schema = 'medical_dw' ORDER BY ordinal_position\"\r\n    cursor.execute(sql_COLUMN_NAME)  # 执行sql语句\r\n    column_names = cursor.fetchall()  # 获取数据\r\n    for result in data:\r\n        one_person = {}\r\n        for i in range(len(column_names)):\r\n            one_person[column_names[i][0]] = str(result[i])\r\n        result_data.append(one_person)\r\n    sql_total = \"select count(*) from dwd_liver_info\"\r\n    cursor.execute(sql_total)\r\n    total_count = cursor.fetchall()  # 取数据\r\n    json_data['total'] = total_count[0][0]\r\n    json_data['data'] = result_data\r\n    json_data = json.dumps(json_data, ensure_ascii=False)\r\n    return json_data\r\n\r\n\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.py b/app.py
--- a/app.py	(revision 1351e7df69491f79473e2d44ebe80526bb8ffef2)
+++ b/app.py	(date 1624004416204)
@@ -317,7 +317,7 @@
     age = json.loads(request.form.get('age'))  # 年龄
     wm_diagnosis = request.form.get('wm_diagnosis')  # 西医诊断
     fei_qi_xu = request.form.get('fei_qi_xu')  # 肺气虚
-    pi_qi_xu = request.form.get('wm_diagnosis')  # 脾气虚
+    pi_qi_xu = request.form.get('pi_qi_xu')  # 脾气虚
     sheng_qi_xu = request.form.get('sheng_qi_xu')  # 肾气虚
     FEV1 = json.loads(request.form.get('FEV1'))  # 年龄
     FVC = json.loads(request.form.get('FVC'))  # 年龄
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"62db865c-0ead-4767-9b09-9c5c5901d1de\" name=\"Default Changelist\" comment=\"Merge branch 'master' of github.com:WeiMin-Li-visual/medicalwarehouse&#10;&#10;# Conflicts:&#10;#&#9;.idea/misc.xml&#10;#&#9;.idea/weiboanalysis.iml&#10;#&#9;.idea/workspace.xml\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/static/js/patient_info/common.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/static/js/patient_info/common.js\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/static/js/patient_info/lung/lung.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/static/js/patient_info/lung/lung.js\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"HTML File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JupyterTrust\" id=\"b40b1ccc-92fa-4c3c-8fc8-6670afb682ed\" />\r\n  <component name=\"ProjectId\" id=\"1jGOf1xcqEsO1xyZISeyPm4Mzkm\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"DefaultHtmlFileTemplate\" value=\"HTML File\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\visual\\PyCharm Community Edition 2019.2.3\\pythonWorkPlace\\weiboanalysis\\static\\data\\weibo\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\visual\\PyCharm Community Edition 2019.2.3\\pythonWorkPlace\\weiboanalysis\\utils\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"weiboanalysis\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/app.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"62db865c-0ead-4767-9b09-9c5c5901d1de\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1603427061766</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1603427061766</updated>\r\n      <workItem from=\"1604022893885\" duration=\"776000\" />\r\n      <workItem from=\"1623394639866\" duration=\"23000\" />\r\n      <workItem from=\"1623548677917\" duration=\"1054000\" />\r\n      <workItem from=\"1623575317953\" duration=\"77000\" />\r\n      <workItem from=\"1623577341534\" duration=\"117000\" />\r\n      <workItem from=\"1623727037848\" duration=\"2088000\" />\r\n      <workItem from=\"1623852502771\" duration=\"135000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Merge branch 'master' of github.com:WeiMin-Li-visual/medicalwarehouse&#10;&#10;# Conflicts:&#10;#&#9;.idea/misc.xml&#10;#&#9;.idea/weiboanalysis.iml&#10;#&#9;.idea/workspace.xml\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Merge branch 'master' of github.com:WeiMin-Li-visual/medicalwarehouse&#10;&#10;# Conflicts:&#10;#&#9;.idea/misc.xml&#10;#&#9;.idea/weiboanalysis.iml&#10;#&#9;.idea/workspace.xml\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <watches-manager>\r\n      <configuration name=\"PythonConfigurationType\">\r\n        <watch expression=\"data\" language=\"Python\" />\r\n        <watch expression=\"totalQueryData\" language=\"Python\" />\r\n        <watch expression=\"len(totalQueryData)\" language=\"Python\" />\r\n        <watch expression=\"patient_total_count[0][0]\" language=\"Python\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 1351e7df69491f79473e2d44ebe80526bb8ffef2)
+++ b/.idea/workspace.xml	(date 1624007240823)
@@ -5,7 +5,9 @@
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/app.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/static/js/patient_info/common.js" beforeDir="false" afterPath="$PROJECT_DIR$/static/js/patient_info/common.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/static/js/patient_info/kidney/kidney.js" beforeDir="false" afterPath="$PROJECT_DIR$/static/js/patient_info/kidney/kidney.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/static/js/patient_info/lung/lung.js" beforeDir="false" afterPath="$PROJECT_DIR$/static/js/patient_info/lung/lung.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/patient_info.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/patient_info.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
Index: templates/patient_info.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\" style=\"height: 100%\">\r\n  <!--刘艳霞 2020.10.23-->\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>谣言源检测</title>\r\n    <link rel=\"stylesheet\" href=\"../static/layui/css/layui.css\" media=\"all\" />\r\n    <style>\r\n      .info {\r\n        width: 80%;\r\n        margin: 0 auto;\r\n      }\r\n      .bar-head-form {\r\n        margin-bottom: 0;\r\n      }\r\n      .header-input {\r\n        height: 35px;\r\n        width: 20%;\r\n        display: inline-block;\r\n      }\r\n      .header-button {\r\n        height: 33px;\r\n        line-height: 35px;\r\n        border: 0;\r\n      }\r\n      #headBar {\r\n        margin-top: -5000px;\r\n      }\r\n      .colBar {\r\n        margin-top: -5000px;\r\n      }\r\n      .max {\r\n        width: 70px;\r\n        display: inline-block;\r\n      }\r\n      .min {\r\n        width: 70px;\r\n        display: inline-block;\r\n      }\r\n      .max::placeholder {\r\n        font-size: 8px;\r\n      }\r\n      .min::placeholder {\r\n        font-size: 8px;\r\n      }\r\n      .patient_detail {\r\n        width: 1000px;\r\n        height: 450px;\r\n      }\r\n      .show_div {\r\n        width: 80%;\r\n        height: 350px;\r\n      }\r\n      .patient_detail form[lay-filter=\"channel_form\"] {\r\n        width: 15%;\r\n        margin: 20px 10px 0;\r\n      }\r\n      .patient_detail form[lay-filter=\"channel_form\"],\r\n      .patient_detail .show_div {\r\n        float: left;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <div class=\"layui-tab layui-tab-brief\" lay-filter=\"patient\">\r\n      <ul class=\"layui-tab-title\">\r\n        <li class=\"layui-this\">肾病人信息</li>\r\n        <li>肝病人信息</li>\r\n        <li>肺病人信息</li>\r\n      </ul>\r\n      <div class=\"layui-tab-content\">\r\n        <div class=\"layui-tab-item layui-show\">\r\n          <div class=\"info\">\r\n            <table class=\"kidney_info_table\" lay-filter=\"test\"></table>\r\n            <div id=\"page_kidney\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-tab-item\">\r\n          <div class=\"info\">\r\n            <table class=\"liver_info_table\" lay-filter=\"liver\"></table>\r\n            <div id=\"page_liver\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-tab-item\">\r\n          <div class=\"info\">\r\n            <table class=\"lung_info_table\" lay-filter=\"lung\"></table>\r\n            <div id=\"page_lung\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"colBar\">\r\n      <a class=\"layui-btn layui-btn-xs\" lay-event=\"detail\">查看</a>\r\n    </div>\r\n    <!-- 肾相关 -->\r\n    <div id=\"headBar_kidney\">\r\n      <button\r\n        class=\"layui-btn layui-btn-normal header-button\"\r\n        lay-event=\"query\"\r\n      >\r\n        查询\r\n      </button>\r\n      <button\r\n        class=\"layui-btn layui-btn-normal header-button\"\r\n        lay-event=\"all_data\"\r\n      >\r\n        所有数据\r\n      </button>\r\n    </div>\r\n    <div class=\"kidney_detail_query\" style=\"padding: 20px\">\r\n      <form class=\"layui-form\" lay-filter=\"query_form\">\r\n        <div class=\"layui-form-item\">\r\n          <label class=\"layui-form-label\">患者id</label>\r\n          <div class=\"layui-input-block\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"id\"\r\n              placeholder=\"请输入\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <label class=\"layui-form-label\">性别</label>\r\n          <div class=\"layui-input-block\">\r\n            <select name=\"sex\" lay-filter=\"aihao\">\r\n              <option value=\"\" selected>请选择性别</option>\r\n              <option value=\"1\">男</option>\r\n              <option value=\"2\">女</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <label class=\"layui-form-label\">症型</label>\r\n          <div class=\"layui-input-block\">\r\n            <select name=\"symptoms\" lay-filter=\"aihao\">\r\n              <option value=\"\" selected>请选择</option>\r\n              <option value=\"1\">肾阳虚</option>\r\n              <option value=\"2\">肾阴虚</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <label class=\"layui-form-label\">年龄</label>\r\n          <div class=\"layui-input-block\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"age_min\"\r\n              placeholder=\"最小值\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input min\"\r\n              lay-verify=\"isNumber\"\r\n            />\r\n            <span>-</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"age_max\"\r\n              placeholder=\"最大值\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input max\"\r\n              lay-verify=\"isNumber\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <label class=\"layui-form-label\">血肌酐</label>\r\n          <div class=\"layui-input-block\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"ser_min\"\r\n              placeholder=\"最小值\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input min\"\r\n              lay-verify=\"isNumber\"\r\n            />\r\n            <span>-</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"ser_max\"\r\n              placeholder=\"最大值\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input max\"\r\n              lay-verify=\"isNumber\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <label class=\"layui-form-label\">eGFR</label>\r\n          <div class=\"layui-input-block\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"eGFR_min\"\r\n              placeholder=\"最小值\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input min\"\r\n              lay-verify=\"isNumber\"\r\n            />\r\n            <span>-</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"eGFR_max\"\r\n              placeholder=\"最大值\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input max\"\r\n              lay-verify=\"isNumber\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <div class=\"layui-input-block\">\r\n            <button class=\"layui-btn submit_query\" lay-submit lay-filter=\"*\">\r\n              立即提交\r\n            </button>\r\n            <button type=\"reset\" class=\"layui-btn layui-btn-primary\">\r\n              重置\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"patient_detail\">\r\n      <table class=\"patient_info\"></table>\r\n      <form class=\"layui-form\" lay-filter=\"channel_form\">\r\n        <select\r\n          name=\"channel\"\r\n          class=\"channel\"\r\n          lay-filter=\"channel_select\"\r\n        ></select>\r\n      </form>\r\n      <div class=\"show_div\"></div>\r\n    </div>\r\n\r\n    <!-- 肺相关 -->\r\n    <div id=\"headBar_lung\">\r\n      <button\r\n        class=\"layui-btn layui-btn-normal header-button\"\r\n        lay-event=\"query\"\r\n      >\r\n        查询\r\n      </button>\r\n      <button\r\n        class=\"layui-btn layui-btn-normal header-button\"\r\n        lay-event=\"all_data\"\r\n      >\r\n        所有数据\r\n      </button>\r\n    </div>\r\n    <div class=\"lung_detail_query\" style=\"padding: 20px\">\r\n      <form class=\"layui-form\" lay-filter=\"query_form\">\r\n        <div class=\"layui-form-item\" style=\"width: 300px\">\r\n          <label class=\"layui-form-label\">患者id</label>\r\n          <div class=\"layui-input-block\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"id\"\r\n              placeholder=\"请输入\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <label class=\"layui-form-label\">年龄</label>\r\n          <div class=\"layui-input-block\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"age_min\"\r\n              placeholder=\"最小值\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input min\"\r\n              lay-verify=\"isNumber\"\r\n            />\r\n            <span>-</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"age_max\"\r\n              placeholder=\"最大值\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input max\"\r\n              lay-verify=\"isNumber\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <div class=\"layui-inline\">\r\n            <label class=\"layui-form-label\">性别</label>\r\n            <div class=\"layui-input-block\">\r\n              <input type=\"radio\" name=\"sex\" value=\"1\" title=\"男\" />\r\n              <input type=\"radio\" name=\"sex\" value=\"2\" title=\"女\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline\">\r\n            <label class=\"layui-form-label\">肾气虚</label>\r\n            <div class=\"layui-input-block\">\r\n              <input type=\"radio\" name=\"sheng_qi_xu\" value=\"1\" title=\"是\" />\r\n              <input type=\"radio\" name=\"sheng_qi_xu\" value=\"0\" title=\"否\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <div class=\"layui-inline\">\r\n            <label class=\"layui-form-label\">肺气虚</label>\r\n            <div class=\"layui-input-block\">\r\n              <input type=\"radio\" name=\"fei_qi_xu\" value=\"1\" title=\"是\" />\r\n              <input type=\"radio\" name=\"fei_qi_xu\" value=\"0\" title=\"否\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline\">\r\n            <label class=\"layui-form-label\">脾气虚</label>\r\n            <div class=\"layui-input-block\">\r\n              <input type=\"radio\" name=\"pi_qi_xu\" value=\"1\" title=\"是\" />\r\n              <input type=\"radio\" name=\"pi_qi_xu\" value=\"0\" title=\"否\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <div class=\"layui-inline\">\r\n            <label class=\"layui-form-label\">西医诊断</label>\r\n            <div class=\"layui-input-block\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"wm_diagnosis\"\r\n                placeholder=\"请输入\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline\">\r\n            <label class=\"layui-form-label\">FEV1</label>\r\n            <div class=\"layui-input-block\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"FEV1_min\"\r\n                placeholder=\"最小值\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input min\"\r\n                lay-verify=\"isNumber\"\r\n              />\r\n              <span>-</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"FEV1_max\"\r\n                placeholder=\"最大值\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input max\"\r\n                lay-verify=\"isNumber\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <div class=\"layui-inline\">\r\n            <label class=\"layui-form-label\">FVC</label>\r\n            <div class=\"layui-input-block\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"FVC_min\"\r\n                placeholder=\"最小值\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input min\"\r\n                lay-verify=\"isNumber\"\r\n              />\r\n              <span>-</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"FVC_max\"\r\n                placeholder=\"最大值\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input max\"\r\n                lay-verify=\"isNumber\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline\">\r\n            <label class=\"layui-form-label\">FEV1%</label>\r\n            <div class=\"layui-input-block\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"FEV1%_min\"\r\n                placeholder=\"最小值\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input min\"\r\n                lay-verify=\"isNumber\"\r\n              />\r\n              <span>-</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"FEV1%_max\"\r\n                placeholder=\"最大值\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input max\"\r\n                lay-verify=\"isNumber\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <div class=\"layui-inline\">\r\n            <label class=\"layui-form-label\">FEV1/FVC</label>\r\n            <div class=\"layui-input-block\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"FEV1/FVC_min\"\r\n                placeholder=\"最小值\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input min\"\r\n                lay-verify=\"isNumber\"\r\n              />\r\n              <span>-</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"FEV1/FVC_max\"\r\n                placeholder=\"最大值\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input max\"\r\n                lay-verify=\"isNumber\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"layui-inline\">\r\n            <label class=\"layui-form-label\">PEF</label>\r\n            <div class=\"layui-input-block\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"PEF_min\"\r\n                placeholder=\"最小值\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input min\"\r\n                lay-verify=\"isNumber\"\r\n              />\r\n              <span>-</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"PEF_max\"\r\n                placeholder=\"最大值\"\r\n                autocomplete=\"off\"\r\n                class=\"layui-input max\"\r\n                lay-verify=\"isNumber\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\" style=\"width: 300px\">\r\n          <label class=\"layui-form-label\">舌象</label>\r\n          <div class=\"layui-input-block\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"tongue\"\r\n              placeholder=\"请输入\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\" style=\"width: 300px\">\r\n          <label class=\"layui-form-label\">脉象</label>\r\n          <div class=\"layui-input-block\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"pulse\"\r\n              placeholder=\"请输入\"\r\n              autocomplete=\"off\"\r\n              class=\"layui-input\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"layui-form-item\">\r\n          <div class=\"layui-input-block\">\r\n            <button class=\"layui-btn submit_query\" lay-submit lay-filter=\"lung\">\r\n              立即提交\r\n            </button>\r\n            <button type=\"reset\" class=\"layui-btn layui-btn-primary\">\r\n              重置\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <script type=\"text/javascript\" src=\"../static/js/echarts.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../static/layui/layui.js\"></script>\r\n    <script src=\"../static/js/jQuery.js\"></script>\r\n    <script src=\"../static/js/patient_info/common.js\"></script>\r\n    <script src=\"../static/js/patient_info/lung/lung.js\"></script>\r\n    <script src=\"../static/js/patient_info/kidney/kidney.js\"></script>\r\n  </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/patient_info.html b/templates/patient_info.html
--- a/templates/patient_info.html	(revision 1351e7df69491f79473e2d44ebe80526bb8ffef2)
+++ b/templates/patient_info.html	(date 1624004496176)
@@ -286,8 +286,8 @@
           <div class="layui-inline">
             <label class="layui-form-label">性别</label>
             <div class="layui-input-block">
-              <input type="radio" name="sex" value="1" title="男" />
-              <input type="radio" name="sex" value="2" title="女" />
+              <input type="radio" name="sex" value="2" title="男" />
+              <input type="radio" name="sex" value="1" title="女" />
             </div>
           </div>
           <div class="layui-inline">
Index: static/js/patient_info/lung/lung.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>layui.use([\"form\", \"layer\"], function () {\r\n  const form = layui.form,\r\n    layer = layui.layer;\r\n  form.on(\"submit(lung)\", (data) => {\r\n    const { field } = data;\r\n    const QUERY_LUNG_DATA = {\r\n      page_el: \"page_lung\",\r\n      table: \"lung\",\r\n      id: field.id.trim(),\r\n      wm_diagnosis: field.wm_diagnosis.trim(),\r\n      tongue: field.tongue.trim(),\r\n      pulse: field.pulse.trim(),\r\n      sex: field.sex === undefined ? \"\" : field.sex.trim(),\r\n      fei_qi_xu: field.fei_qi_xu === undefined ? \"\" : field.fei_qi_xu.trim(),\r\n      pi_qi_xu: field.pi_qi_xu === undefined ? \"\" : field.pi_qi_xu.trim(),\r\n      sheng_qi_xu:\r\n        field.sheng_qi_xu === undefined ? \"\" : field.sheng_qi_xu.trim(),\r\n      age: JSON.stringify([field.age_min.trim(), field.age_max.trim()]),\r\n      FEV1: JSON.stringify([field.FEV1_min.trim(), field.FEV1_max.trim()]),\r\n      FVC: JSON.stringify([field.FVC_min.trim(), field.FVC_max.trim()]),\r\n      \"FEV1%\": JSON.stringify([\r\n        field[\"FEV1%_min\"].trim(),\r\n        field[\"FEV1%_max\"].trim(),\r\n      ]),\r\n      \"FEV1/FVC\": JSON.stringify([\r\n        field[\"FEV1/FVC_min\"].trim(),\r\n        field[\"FEV1/FVC_max\"].trim(),\r\n      ]),\r\n      PEF: JSON.stringify([field.PEF_min.trim(), field.PEF_max.trim()]),\r\n      page: 1,\r\n      limit: 10,\r\n    };\r\n    console.log(QUERY_LUNG_DATA);\r\n    query_lung_obj = QUERY_LUNG_DATA;\r\n    getTable(query_lung_obj, url, true, layer, \"查询成功!\");\r\n    return false;\r\n  });\r\n});\r\nfunction renderTable_lung(tableData) {\r\n  // 渲染表格，tableData：后端返回的数据\r\n  console.log(tableData);\r\n  const { data: arrData, code, total } = JSON.parse(tableData);\r\n  const data = arrData.map((e) => {\r\n    e.sex = e.sex === \"1\" ? \"女\" : \"男\";\r\n    e.Lung_qi_deficiency = e.Lung_qi_deficiency === \"1\" ? \"是\" : \"否\";\r\n    e.spleen_qi_deficiency = e.spleen_qi_deficiency === \"1\" ? \"是\" : \"否\";\r\n    e.kidney_qi_deficiency = e.kidney_qi_deficiency === \"1\" ? \"是\" : \"否\";\r\n    return e;\r\n  });\r\n\r\n  layui.use([\"laypage\", \"table\", \"layer\", \"form\"], function () {\r\n    const laypage = layui.laypage;\r\n    const table = layui.table;\r\n    table.render({\r\n      elem: \".lung_info_table\", // 定位表格ID\r\n      title: \"用户数据表\",\r\n      toolbar: \"#headBar_lung\", // 表格头工具栏\r\n      cols: tabelCols_lung,\r\n      data,\r\n      limit: query_lung_obj.limit, // 每一页数据条数\r\n      done: function () {\r\n        // 分页组件\r\n        getPage(total, laypage, url, query_lung_obj);\r\n      },\r\n    });\r\n    table.on(\"toolbar(lung)\", function (obj) {\r\n      // 点击查询按钮后的弹出层，用于更细节的查询\r\n      var checkStatus = table.checkStatus(obj.config.id);\r\n      switch (obj.event) {\r\n        case \"query\": {\r\n          layer_idx = layer.open({\r\n            type: 1,\r\n            area: \"700px\",\r\n            shadeClose: true,\r\n            title: \"查询页面\",\r\n            content: $(\".lung_detail_query\"),\r\n          });\r\n          break;\r\n        }\r\n        case \"all_data\": {\r\n          query_lung_obj = orignQuery;\r\n          getTable(query_lung_obj, url, true, layer, \"重置成功!\");\r\n          $(\".lung_detail_query .layui-form\")[0].reset();\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n}\r\n\r\nlet query_lung_obj = {\r\n  page_el: \"page_lung\",\r\n  table: \"lung\",\r\n  id: \"\",\r\n  wm_diagnosis: \"\",\r\n  tongue: \"\",\r\n  pulse: \"\",\r\n  sex: \"\",\r\n  fei_qi_xu: \"\",\r\n  pi_qi_xu: \"\",\r\n  sheng_qi_xu: \"\",\r\n  PEF: JSON.stringify([\"\", \"\"]),\r\n  age: JSON.stringify([\"\", \"\"]),\r\n  FEV1: JSON.stringify([\"\", \"\"]),\r\n  FVC: JSON.stringify([\"\", \"\"]),\r\n  \"FEV1%\": JSON.stringify([\r\n    \"\", \"\"]),\r\n  \"FEV1/FVC\": JSON.stringify([\r\n    \"\", \"\"]),\r\n};\r\n\r\nlet  tabelCols_lung = [\r\n  [\r\n    {\r\n      field: \"id\",\r\n      title: \"编号\",\r\n      width: 80,\r\n      align: \"center\",\r\n    },\r\n    { field: \"sex\", title: \"性别\", width: 80, align: \"center\" },\r\n    {\r\n      field: \"age\",\r\n      title: \"年龄\",\r\n      width: 80,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"wm_diagnosis\",\r\n      title: \"西医诊断\",\r\n      width: 110,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"Lung_qi_deficiency\",\r\n      title: \"肺气虚\",\r\n      width: 80,\r\n      align: \"center\",\r\n    },\r\n    { field: \"spleen_qi_deficiency\", title: \"脾气虚\", width: 80, align: \"center\" },\r\n    { field: \"kidney_qi_deficiency\", title: \"肾气虚\", width: 80, align: \"center\" },\r\n    { field: \"FEV1\", title: \"FEV1\", width: 100, align: \"center\" },\r\n    { field: \"FVC\", title: \"FVC\", width: 100, align: \"center\" },\r\n    { field: \"FEV1%\", title: \"FEV1%\", width: 100, align: \"center\" },\r\n    { field: \"FEV1/FVC\", title: \"FEV1/FVC\", width: 100, align: \"center\" },\r\n    { field: \"PEF\", title: \"PEF\", width: 100, align: \"center\" },\r\n    { field: \"tongue\", title: \"舌\", width: 180, align: \"center\" },\r\n    { field: \"pulse\", title: \"脉\",width: 80, align: \"center\" },\r\n    {\r\n      field: \"detail\",\r\n      title: \"详细\",\r\n      width: 80,\r\n      toolbar: \".colBar\",\r\n      align: \"center\",\r\n    },\r\n  ],\r\n]\r\n\r\n/*\r\n\r\n{\r\n  table: \"lung\",\r\n  id: \"\",\r\n  wm_diagnosis: \"\",\r\n  tongue: \"\",\r\n  pulse: \"\",\r\n  sex: \"\",\r\n  fei_qi_xu: \"\",\r\n  pi_qi_xu: \"\",\r\n  sheng_qi_xu: \"\",\r\n  age: JSON.stringify([\"\", \"\"]),\r\n  FEV1: JSON.stringify([\"\", \"\"]),\r\n  FVC: JSON.stringify([\"\", \"\"]),\r\n  \"FEV1%\": JSON.stringify([\r\n    \"\", \"\"]),\r\n  \"FEV1/FVC\": JSON.stringify([\r\n    \"\", \"\"]),\r\n};\r\n\r\n*/\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/js/patient_info/lung/lung.js b/static/js/patient_info/lung/lung.js
--- a/static/js/patient_info/lung/lung.js	(revision 1351e7df69491f79473e2d44ebe80526bb8ffef2)
+++ b/static/js/patient_info/lung/lung.js	(date 1624004666078)
@@ -38,7 +38,6 @@
 });
 function renderTable_lung(tableData) {
   // 渲染表格，tableData：后端返回的数据
-  console.log(tableData);
   const { data: arrData, code, total } = JSON.parse(tableData);
   const data = arrData.map((e) => {
     e.sex = e.sex === "1" ? "女" : "男";
@@ -78,7 +77,7 @@
           break;
         }
         case "all_data": {
-          query_lung_obj = orignQuery;
+          query_lung_obj = orignQuery_lung;
           getTable(query_lung_obj, url, true, layer, "重置成功!");
           $(".lung_detail_query .layui-form")[0].reset();
         }
@@ -108,7 +107,7 @@
   "FEV1/FVC": JSON.stringify([
     "", ""]),
 };
-
+const orignQuery_lung = {...query_lung_obj}
 let  tabelCols_lung = [
   [
     {
@@ -155,25 +154,3 @@
   ],
 ]
 
-/*
-
-{
-  table: "lung",
-  id: "",
-  wm_diagnosis: "",
-  tongue: "",
-  pulse: "",
-  sex: "",
-  fei_qi_xu: "",
-  pi_qi_xu: "",
-  sheng_qi_xu: "",
-  age: JSON.stringify(["", ""]),
-  FEV1: JSON.stringify(["", ""]),
-  FVC: JSON.stringify(["", ""]),
-  "FEV1%": JSON.stringify([
-    "", ""]),
-  "FEV1/FVC": JSON.stringify([
-    "", ""]),
-};
-
-*/
Index: static/js/patient_info/kidney/kidney.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function renderTable(tableData) {\r\n  // 渲染表格，tableData：后端返回的数据\r\n  const { data: arrData, code, total } = JSON.parse(tableData);\r\n  const data = arrData.map((e) => {\r\n    e.sex = e.sex === \"2\" ? \"女\" : \"男\";\r\n    e.symptoms_type = e.symptoms_type === \"1\" ? \"肾阳虚\" : \"肾阴虚\";\r\n    return e;\r\n  });\r\n  layui.use([\"laypage\", \"table\", \"layer\", \"form\"], function () {\r\n    const laypage = layui.laypage,\r\n      layer = layui.layer,\r\n      form = layui.form;\r\n    const table = layui.table;\r\n    // 表格table组件\r\n    table.render({\r\n      elem: \".kidney_info_table\", // 定位表格ID\r\n      title: \"用户数据表\",\r\n      toolbar: \"#headBar_kidney\", // 表格头工具栏\r\n      cols: tabelCols,\r\n      data,\r\n      limit: query_kidney_Obj.limit, // 每一页数据条数\r\n      done: function () {\r\n        // 分页组件\r\n        getPage(total, laypage, url,query_kidney_Obj);\r\n      },\r\n    });\r\n    table.on(\"tool(test)\", function (obj) {\r\n      //行工具栏事件，点击详细的相关处理\r\n      switch (obj.event) {\r\n        case \"detail\": {\r\n          id = obj.data.id;\r\n          $.ajax({\r\n            type: \"POST\",\r\n            url: `http://127.0.0.1:5000/find_channelNumber`,\r\n            data: {\r\n              id,\r\n            }, // 携带的数据，POST方法用\r\n            success: function (returnData) {\r\n              let { channelNumber } = JSON.parse(returnData);\r\n              channelNumber = parseInt(channelNumber);\r\n              setTimeout(() => {\r\n                //使用计时器，防止表格渲染出现格式问题\r\n                table.render({\r\n                  elem: \".patient_info\", // 定位表格ID\r\n                  title: \"病人信息\",\r\n                  cols: patientCols,\r\n                  data: [data.find((e) => e.id === id)],\r\n                  limit: query_kidney_Obj.limit, // 每一页数据条数\r\n                  done: function () {\r\n                    // 分页组件\r\n                    getPage(total, laypage, url, query_kidney_Obj);\r\n                  },\r\n                });\r\n              }, 0);\r\n              layer.open({\r\n                type: 1,\r\n                shadeClose: true,\r\n                area: [\"1200\", \"450\"],\r\n                title: \"详细信息\",\r\n                content: $(\".patient_detail\"),\r\n                end: () => {\r\n                  channelChart.clear();\r\n                }, // 弹出层关闭后的回调， 清除eCharts图表\r\n              });\r\n              channelSelect.empty(); // 清空select中的option选项， 防止冲突\r\n              if (channelNumber === 0) {\r\n                channelSelect.append(\r\n                  $(`<option value=\"none\" disabled>没有数据</option>`)\r\n                );\r\n              } else {\r\n                channelSelect.append(\r\n                  $(`<option value=\"\">请选择一个通道</option>`)\r\n                );\r\n                for (let i = 1; i <= channelNumber; ++i) {\r\n                  const newOption = $(`<option value=${i}>通道${i}</option>`);\r\n                  channelSelect.append(newOption);\r\n                }\r\n              }\r\n              form.render(\"select\", \"channel_form\"); // 重新渲染select\r\n            },\r\n          });\r\n        }\r\n      }\r\n    });\r\n    table.on(\"toolbar(test)\", function (obj) {\r\n      // 点击查询按钮后的弹出层，用于更细节的查询\r\n      var checkStatus = table.checkStatus(obj.config.id);\r\n      switch (obj.event) {\r\n        case \"query\": {\r\n          layer_idx = layer.open({\r\n            type: 1,\r\n            shadeClose: true,\r\n            title: \"查询页面\",\r\n            content: $(\".kidney_detail_query\"),\r\n          });\r\n          break;\r\n        }\r\n        case \"all_data\": {\r\n          query_kidney_Obj = orignQuery;\r\n          getTable(query_kidney_Obj,url, true, layer, \"重置成功!\");\r\n          $(\".kidney_detail_query .layui-form\")[0].reset();\r\n        }\r\n      }\r\n    });\r\n    form.on(\"select(channel_select)\", function (data) {\r\n      const { value } = data;\r\n      $.ajax({\r\n        type: \"POST\",\r\n        url: `http://127.0.0.1:5000/channel_data`,\r\n        data: {\r\n          id,\r\n          num: value,\r\n        }, // 携带的数据，POST方法用\r\n        success: function (returnData) {\r\n          layer.msg(\"更新成功\");\r\n          const { data } = JSON.parse(returnData),\r\n            len = data.length;\r\n          let xaxis = [];\r\n          for (let i = 1; i <= len; ++i) {\r\n            xaxis.push(i);\r\n          }\r\n          option.xAxis.data = xaxis;\r\n          option.series.data = data;\r\n          channelChart.setOption(option);\r\n        },\r\n      });\r\n    });\r\n  });\r\n}\r\nlayui.use([\"form\", \"layer\"], function () {\r\n  const form = layui.form,\r\n    layer = layui.layer;\r\n  form.verify({\r\n    isNumber: (value) => {\r\n      if (Number.isNaN(Number(value))) {\r\n        return \"请输入数字\";\r\n      }\r\n    },\r\n  });\r\n  form.on(\"submit(*)\", (data) => {\r\n    const { field } = data;\r\n    console.log(data);\r\n    const QUERY_DATA = {\r\n      page_el: \"page_kidney\",\r\n      table: \"kidney\",\r\n      id: field.id.trim(),\r\n      sex: field.sex.trim(),\r\n      symptoms: field.symptoms.trim(),\r\n      age: JSON.stringify([field.age_min.trim(), field.age_max.trim()]),\r\n      serum_creatinine: JSON.stringify([\r\n        field.ser_min.trim(),\r\n        field.ser_max.trim(),\r\n      ]),\r\n      eGFR: JSON.stringify([field.eGFR_min, field.eGFR_max.trim()]),\r\n      page: 1,\r\n      limit: 10,\r\n    };\r\n    query_kidney_Obj = QUERY_DATA;\r\n    getTable(query_kidney_Obj, url, true, layer, \"查询成功!\");\r\n    return false;\r\n  });\r\n});\r\nlayui.use([\"element\"], function () {});\r\nlet layer_idx = 0; // layer的index参数，用于控制弹出层（查询用）的关闭\r\nlet query_kidney_Obj = {\r\n  page_el: \"page_kidney\",\r\n  table: \"kidney\",\r\n  id: \"\",\r\n  sex: \"\",\r\n  symptoms: \"\",\r\n  age: JSON.stringify([\"\", \"\"]),\r\n  serum_creatinine: JSON.stringify([\"\", \"\"]),\r\n  eGFR: JSON.stringify([\"\", \"\"]),\r\n  page: 1,\r\n  limit: 10,\r\n}; // 查询字符串，用于获取病人的数据\r\nlet id = \"\";\r\n\r\nconst channelDom = $(\".show_div\")[0];\r\nconst channelSelect = $(\".channel\");\r\nconst orignQuery = { ...query_kidney_Obj }; // 原始的查询字符串，用于重置操作\r\nconst channelChart = echarts.init(channelDom);\r\nconst tabelCols = [\r\n  [\r\n    {\r\n      field: \"id\",\r\n      title: \"编号\",\r\n      width: 80,\r\n      align: \"center\",\r\n    },\r\n    { field: \"sex\", title: \"性别\", width: 80, align: \"center\" },\r\n    {\r\n      field: \"age\",\r\n      title: \"年龄\",\r\n      width: 80,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"serum_creatinine\",\r\n      title: \"血肌酐\",\r\n      width: 110,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"eGFR\",\r\n      title: \"eGFR\",\r\n      width: 177,\r\n      align: \"center\",\r\n    },\r\n    { field: \"symptoms_type\", title: \"症型\", align: \"center\" },\r\n    { field: \"tongue\", title: \"舌\", align: \"center\" },\r\n    { field: \"pulse\", title: \"脉\", align: \"center\" },\r\n    {\r\n      field: \"detail\",\r\n      title: \"详细\",\r\n      width: 80,\r\n      toolbar: \".colBar\",\r\n      align: \"center\",\r\n    },\r\n  ],\r\n];\r\nconst patientCols = [[...tabelCols[0]]];\r\npatientCols[0].pop();\r\nconst option = {\r\n  title: {\r\n    text: \"脉搏信号\",\r\n    left: \"1%\",\r\n  },\r\n  tooltip: {\r\n    trigger: \"axis\",\r\n  },\r\n  grid: {\r\n    left: \"10%\",\r\n    right: \"15%\",\r\n    bottom: \"10%\",\r\n  },\r\n  xAxis: {\r\n    data: [],\r\n  },\r\n  yAxis: {\r\n    min: \"dataMin\",\r\n    max: \"dataMax\",\r\n    axisLabel: {\r\n      formatter: (value) => value.toFixed(4),\r\n    },\r\n  },\r\n  dataZoom: [\r\n    {\r\n      startValue: \"1\",\r\n    },\r\n    {\r\n      type: \"inside\",\r\n    },\r\n  ],\r\n  series: {\r\n    name: \"脉搏信号\",\r\n    type: \"line\",\r\n    data: [],\r\n    markLine: {\r\n      silent: true,\r\n      lineStyle: {\r\n        color: \"#333\",\r\n      },\r\n    },\r\n  },\r\n};\r\ngetTable(query_kidney_Obj, url); // 获得表格数据，第一次调用默认获得所有病人的信息（第一页）\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/js/patient_info/kidney/kidney.js b/static/js/patient_info/kidney/kidney.js
--- a/static/js/patient_info/kidney/kidney.js	(revision 1351e7df69491f79473e2d44ebe80526bb8ffef2)
+++ b/static/js/patient_info/kidney/kidney.js	(date 1624004157941)
@@ -96,7 +96,7 @@
           break;
         }
         case "all_data": {
-          query_kidney_Obj = orignQuery;
+          query_kidney_Obj = orignQuery_kidney;
           getTable(query_kidney_Obj,url, true, layer, "重置成功!");
           $(".kidney_detail_query .layui-form")[0].reset();
         }
@@ -178,7 +178,7 @@
 
 const channelDom = $(".show_div")[0];
 const channelSelect = $(".channel");
-const orignQuery = { ...query_kidney_Obj }; // 原始的查询字符串，用于重置操作
+const orignQuery_kidney = { ...query_kidney_Obj }; // 原始的查询字符串，用于重置操作
 const channelChart = echarts.init(channelDom);
 const tabelCols = [
   [
Index: static/js/patient_info/common.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function getTable(postData, dir, sign = false, layer = null, msg = \"\") {\r\n  console.log(dir);\r\n  console.log(postData);\r\n  $.ajax({\r\n    // 向后端请求数据\r\n    type: \"POST\", //请求的方法\r\n    url: dir,\r\n    data: postData, // 携带的数据，POST方法用\r\n    success: function (returnData) {\r\n      // 请求成功时的回调函数\r\n      switch(postData.table) {\r\n        case \"kidney\": renderTable(returnData);break;\r\n        case \"lung\": renderTable_lung(returnData);break;\r\n      }\r\n      if (sign) {\r\n        layer.msg(msg);\r\n        layer.close(layer_idx);\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nfunction getPage(total, laypage, dir, queryObj) {\r\n  // 设置分页\r\n  laypage.render({\r\n    elem: queryObj.page_el, // 根据ID定位\r\n    count: total, // 获取的数据总数\r\n    limit: queryObj.limit, // 每页默认显示的数量，同上\r\n    layout: [\"prev\", \"page\", \"next\", \"limit\"],\r\n    curr: queryObj.page, // 页码\r\n    jump: function (obj, first) {\r\n      if (!first) {\r\n        queryObj.page = obj.curr; // 设置当前页位置\r\n        queryObj.limit = obj.limit; // 设置每页的数据条数\r\n        getTable(queryObj, dir);\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nlet url = \"/patient_info_by_condition\";\r\nlet urlArr = [\"/patient_info_by_condition\", \"/patient_info_by_condition\", \"http://127.0.0.1:5000/lung_patient_info\"]\r\n\r\nlayui.use([\"element\"], function() {\r\n  const element = layui.element;\r\n  element.on('tab(patient)', function(data){\r\n    url = urlArr[data.index]\r\n    getTable(query_lung_obj, url);\r\n  });  \r\n})
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/js/patient_info/common.js b/static/js/patient_info/common.js
--- a/static/js/patient_info/common.js	(revision 1351e7df69491f79473e2d44ebe80526bb8ffef2)
+++ b/static/js/patient_info/common.js	(date 1624004585807)
@@ -39,12 +39,14 @@
 }
 
 let url = "/patient_info_by_condition";
-let urlArr = ["/patient_info_by_condition", "/patient_info_by_condition", "http://127.0.0.1:5000/lung_patient_info"]
 
 layui.use(["element"], function() {
   const element = layui.element;
   element.on('tab(patient)', function(data){
-    url = urlArr[data.index]
-    getTable(query_lung_obj, url);
+    switch(data.index) {
+      case 0: getTable(query_kidney_Obj, "/patient_info_by_condition"); break;
+      case 1: getTable(query_lung_obj, url); break;
+      case 2: getTable(query_lung_obj, "/lung_patient_info"); break;
+    }
   });  
 })
\ No newline at end of file
